colnames(data)[1]<-"ID"
# The metadata is loaded
metadata<- read.csv(file = "./01_source_files/metadata.csv")
colnames(metadata)[1]<-"ID"
metadata<-metadata[,colnames(metadata) %in% colnames(data)]
romics_metab<- romicsCreateObject(data,metadata,main_factor = "Treatment")
romics_metab<- romicsSampleNameFromFactor(romics_metab,factor =  metadata[4,1])
romics_metab<- romicsZeroToMissing(romics_metab)
romicsPlotMissing(romics_metab)
romics_metab<-romicsFilterMissing(romics_metab,percentage_completeness = 70, main_factor = "main")
print(paste0(nrow(romics_metab$data),"/", nrow(romics_metab$original_data)," metabolites remained after filtering", " (",round(nrow(romics_metab$data)/nrow(romics_metab$original_data)*100,2),"%)."))
romics_metab<-log2transform(romics_metab)
distribBoxplot(romics_metab)
romics_metab<-medianCenterSample(romics_metab)
distribBoxplot(romics_metab)
romicsOutlierEval(romics_metab, metrics = c("Correlation", "MAD", "Skewness"))
romics_subset<-romicsOutlierRemove(romics_metab, metrics = c("Correlation", "MAD", "Skewness"))
imputeMissingEval(romics_metab,nb_stdev = 2,width_stdev = 0.5)
romics_metab<-imputeMissing(romics_metab,nb_stdev = 2,width_stdev = 0.5)
romicsHclust(romics_metab)
indPCAplot(romics_metab, ncp=5,plotType = "percentage")
indPCAplot(romics_metab, ncp=5,plotType = "individual",Xcomp=1,Ycomp =2)
indPCAplot(romics_metab, ncp=5, plotType = "individual",Xcomp=2,Ycomp =3)
imputeMissingEval(romics_subset,nb_stdev = 2,width_stdev = 0.5)
romics_metab<-imputeMissing(romics_metab,nb_stdev = 2,width_stdev = 0.5)
romicsHclust(romics_subset)
indPCAplot(romics_subset, ncp=5,plotType = "percentage")
indPCAplot(romics_subset, ncp=5,plotType = "individual",Xcomp=1,Ycomp =2)
indPCAplot(romics_subset, ncp=5, plotType = "individual",Xcomp=2,Ycomp =3)
romics_metab<-romicsMean(romics_metab)
romics_metab<-romicsSd(romics_metab)
romics_metab<-romicsANOVA(romics_metab)
print(paste0(sum(romics_metab$statistics$ANOVA_p<0.05), " metabolites had an ANOVA p<0.05."))
pval<-data.frame(ids=rownames(romics_metab$statistics), p=romics_metab$statistics$ANOVA_p)
ggplot(pval, aes(p)) + geom_histogram(binwidth = 0.01)+theme_ROP()+ggtitle("ANOVA p frequency plot")+geom_vline(xintercept=0.05,linetype="dashed", color = "red")
print(paste0(sum(romics_metab$statistics$ANOVA_padj<0.05), " metabolites had an ANOVA padjusted<0.05."))
pval<-data.frame(ids=rownames(romics_metab$statistics), p=romics_metab$statistics$ANOVA_padj)
ggplot(pval, aes(p)) + geom_histogram(binwidth = 0.01)+theme_ROP()+ggtitle("ANOVA padj frequency plot")+geom_vline(xintercept=0.05,linetype="dashed", color = "red")
romicsHeatmap(romics_metab,variable_hclust_number = 3,ANOVA_filter = "p", p=0.05)
romics_proteins$statistics
colnames(romics_proteins$statistics)
romics_object<-romics_proteins
p_columns<-romics_object$statistics[, grepl(c(".*_p",".*_padj",colnames(romics_object$statistics)))]
p_columns<-romics_object$statistics[, grepl(c(".*_p",colnames(romics_object$statistics)))]
p_columns<-romics_object$statistics[, grepl(".*_p",colnames(romics_object$statistics))]
View(p_columns)
p_columns<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))]
View(p_columns)
p_columns<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))|grepl(".*_padj$",colnames(romics_object$statistics))]
if(p_columns!="all"){pcol<-pcol[,colnames(pcol) %in% p_columns]}
pcol<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))|grepl(".*_padj$",colnames(romics_object$statistics))]
if(p_columns!="all"){pcol<-pcol[,colnames(pcol) %in% p_columns]}
View(pcol)
p_columns="all"
p=0.05
if(!is.romics_object(romics_object) | missing(romics_object)) {stop("romics_object is missing or is not in the appropriate format")}
if(missing(p_columns)){p_columns="all"}
if(is.character(p_columns)){stop("'p_columns' has to be a character vector.")}
if(missing(p)|!is.numeric(p)){p=0.05}
pcol<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))|grepl(".*_padj$",colnames(romics_object$statistics))]
if(p_columns!="all"){pcol<-pcol[,colnames(pcol) %in% p_columns]}
View(pcol)
sum(pcol[1]<p
i<-1
pcol[,i]<p
print(paste0(sum(pcol[,i]<p)," had ",colnames(pcol)[i],"<",p)
)
print(paste0(sum(pcol[,i]<p)," with ",colnames(pcol)[i],"<",p))
View(pcol)
pval<-data.frame(ids=rownames(pcol), p=pcol[i])
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
ggplot(pval, aes(p)) + geom_histogram(binwidth = 0.01)+theme_ROP()+ggtitle(paste0("Frequency plot: ",colnames(pcol[i]))+geom_vline(xintercept=p,linetype="dashed", color = "red")
ggplot(pval, aes(p)) + geom_histogram(binwidth = 0.01)+theme_ROP()+ggtitle(paste0("Frequency plot: ",colnames(pcol[i]))+geom_vline(xintercept=p,linetype="dashed", color = "red")
pval<-data.frame(ids=rownames(pcol), p=pcol[i])
ggplot(pval, aes(p)) + geom_histogram(binwidth = 0.01)+theme_ROP()+ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")
library("RomicsProcessor")
pval<-data.frame(ids=rownames(pcol), p=pcol[i])
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
ggplot(pval, aes(p)) + geom_histogram(binwidth = 0.01)+theme_ROP()+ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")
pval<-data.frame(ids=rownames(pcol), p=pcol[i])
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
pval
View(pval)
ggplot(pval, aes(p)) + geom_histogram(binwidth = 0.01)+theme_ROP()+ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")
pcol[i]
min(pcol[i])
max(pcol[i])
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
bin_width=0.01
ggplot(pval, aes(p)) + geom_histogram(binwidth = bin_width)+theme_ROP()+ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")
ggplot(pval, aes(p)) + geom_histogram()
ggplot(pval, aes(p)) + geom_histogram(binwidth = 0.1)
ggplot(pval, aes(p)) + geom_histogram(binwidth = 0.5)
ggplot(pval, aes(p)) + geom_histogram(binwidth = 0.001)
pval<-data.frame(ids=rownames(pcol), p=pcol[i])
View(pval)
pcol[i]
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
ggplot(pval, aes(p)) + geom_histogram(binwidth = bin_width)+theme_ROP()+ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")
ggplot(pval, aes(p)) + geom_histogram(binwidth = bin_width)+theme_ROP()+ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red",show.legend = paste0("p=",p))
ggplot(pval, aes(p)) + geom_histogram(binwidth = bin_width)+theme_ROP()+ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red",show.legend = paste0("p=",p))
paste0(colnames(pcol)[i],"<",p)
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05, label=paste0(colnames(pcol)[i],"<",p),colour="red"))+
theme_ROP()
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05, label=paste0(colnames(pcol)[i],"<",p),colour="red"))+
theme_ROP()
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05, label=paste0(colnames(pcol)[i],"<",p),colour="red"),angle=90,text=element_text(size=11))+
theme_ROP()
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(0.05, label=paste0(colnames(pcol)[i],"<",p),colour="red"),angle=90,text=element_text(size=11))+
theme_ROP()
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
#geom_text(0.05, label=paste0(colnames(pcol)[i],"<",p),colour="red"),angle=90,text=element_text(size=11))+
theme_ROP()
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05, label=paste0(colnames(pcol)[i],"<",p),colour="red"),angle=90,text=element_text(size=11))+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05, label=paste0(colnames(pcol)[i],"<",p),colour="red"),angle=90,text=element_text(size=11))
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(0.05, label=paste0(colnames(pcol)[i],"<",p),colour="red",angle=90,text=element_text(size=11))
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05), label=paste0(colnames(pcol)[i],"<",p),colour="red",angle=90,text=element_text(size=11))+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05), label=paste0(colnames(pcol)[i],"<",p),colour="red",angle=90,text=element_text(size=11))+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05), label=paste0(colnames(pcol)[i],"<",p),colour="red",angle=90,text=element_text(size=11))
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
#geom_text(aes(x=0.05), label=paste0(colnames(pcol)[i],"<",p),colour="red",angle=90,text=element_text(size=11))+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05), label=paste0(colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
#geom_text(aes(x=0.05,y=), label=paste0(colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=1), label=paste0(colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=1), label=paste0(colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=1), label=paste0("/n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=10), label=paste0("/n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=10), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
test<-hist(x, seq(0,1,by=bin_width), plot = FALSE)
test<-hist(pval, seq(0,1,by=bin_width), plot = FALSE)
test<-hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)
max(test)
test
test<-max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)
test
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=max(hist(pval$p, seq(0,1,by=bin_width)/2, plot = FALSE)$counts)), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p,y=max(hist(pval$p, seq(0,1,by=bin_width)/2, plot = FALSE)$counts)), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
max(hist(pval$p, seq(0,1,by=bin_width)/2
)
hist(pval$p, seq(0,1,by=bin_width))$count/2
max(hist(pval$p, seq(0,1,by=bin_width))$count)/2
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p,y=max(hist(pval$p, seq(0,1,by=bin_width))$count)/2, seq(0,1,by=bin_width)/2, plot = FALSE)$counts)), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p,y=max(hist(pval$p, seq(0,1,by=bin_width))$count)/2), seq(0,1,by=bin_width)/2, plot = FALSE)$counts)), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
hist(pval$p, seq(0,1,by=bin_width))$count, plot=FALSE)/2
hist(pval$p, seq(0,1,by=bin_width))$count)
test<-max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)
test
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2, label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90))+
theme_ROP()
max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2
p
paste0("\n",colnames(pcol)[i],"<",p)
p
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2, label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90))
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90))+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
test(c(x=p,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2))
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p,y=55), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p,y=55), label=paste0("\n",colnames(pcol)[i],"<",p))
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=55), label=paste0("\n",colnames(pcol)[i],"<",p))+
theme_ROP()
p
as.numeric(p)
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=t(as.numeric(p)),y=55, plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=as.numeric(p),y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/4*3), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/4*3), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/6*4), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
i<-2
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=0.05,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=as.numeric(p),y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
p1<-p
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p1,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
pFrequencyPlot<-function(romics_object,p_columns="all",p=0.05,bin_width=0.01){
arguments<-as.list(match.call())
if(!is.romics_object(romics_object) | missing(romics_object)) {stop("romics_object is missing or is not in the appropriate format")}
if(missing(p_columns)){p_columns="all"}
if(is.character(p_columns)){stop("'p_columns' has to be a character vector.")}
if(missing(p)|!is.numeric(p)){p=0.05}
pcol<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))|grepl(".*_padj$",colnames(romics_object$statistics))]
if(p_columns!="all"){pcol<-pcol[,colnames(pcol) %in% p_columns]}
for (i in 1:ncol(pcol)){
p1<-p
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p1,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
}
}
pFrequencyPlot(romics_proteins,p = 0.1,bin_width = 0.01)
romics_object<-romics_proteins
p_columns="all"
p=0.05
bin_width=0.01
if(!is.romics_object(romics_object) | missing(romics_object)) {stop("romics_object is missing or is not in the appropriate format")}
if(missing(p_columns)){p_columns="all"}
if(is.character(p_columns)){stop("'p_columns' has to be a character vector.")}
if(missing(p)|!is.numeric(p)){p=0.05}
pcol<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))|grepl(".*_padj$",colnames(romics_object$statistics))]
if(p_columns!="all"){pcol<-pcol[,colnames(pcol) %in% p_columns]}
for (i in 1:ncol(pcol)){
p1<-p
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p1,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
}
for (i in 1:ncol(pcol)){
p1<-p
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p1,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP()
}
for (i in 1:ncol(pcol)){
p1<-p
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
print(ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p1,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP())
}
pFrequencyPlot<-function(romics_object,p_columns="all",p=0.05,bin_width=0.01){
arguments<-as.list(match.call())
if(!is.romics_object(romics_object) | missing(romics_object)) {stop("romics_object is missing or is not in the appropriate format")}
if(missing(p_columns)){p_columns="all"}
if(is.character(p_columns)){stop("'p_columns' has to be a character vector.")}
if(missing(p)|!is.numeric(p)){p=0.05}
pcol<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))|grepl(".*_padj$",colnames(romics_object$statistics))]
if(p_columns!="all"){pcol<-pcol[,colnames(pcol) %in% p_columns]}
for (i in 1:ncol(pcol)){
p1<-p
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
print(ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p1,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP())
}
}
pFrequencyPlot(romics_object)
pFrequencyPlot<-function(romics_object,p_columns="all",p=0.05,bin_width=0.01){
arguments<-as.list(match.call())
if(!is.romics_object(romics_object) | missing(romics_object)) {stop("romics_object is missing or is not in the appropriate format")}
if(missing(p_columns)){p_columns=as.character("all")}
if(is.character(p_columns)){stop("'p_columns' has to be a character vector.")}
if(missing(p)|!is.numeric(p)){p=0.05}
pcol<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))|grepl(".*_padj$",colnames(romics_object$statistics))]
if(p_columns!="all"){pcol<-pcol[,colnames(pcol) %in% p_columns]}
for (i in 1:ncol(pcol)){
p1<-p
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
print(ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p1,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP())
}
}
pFrequencyPlot<-function(romics_object,p_columns="all",p=0.05,bin_width=0.01){
arguments<-as.list(match.call())
if(!is.romics_object(romics_object) | missing(romics_object)) {stop("romics_object is missing or is not in the appropriate format")}
if(missing(p_columns)){p_columns=as.character("all")}
if(is.character(p_columns)){stop("'p_columns' has to be a character vector.")}
if(missing(p)|!is.numeric(p)){p=0.05}
pcol<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))|grepl(".*_padj$",colnames(romics_object$statistics))]
if(p_columns!="all"){pcol<-pcol[,colnames(pcol) %in% p_columns]}
for (i in 1:ncol(pcol)){
p1<-p
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
print(ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p1,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP())
}
}
pFrequencyPlot(romics_object)
pFrequencyPlot<-function(romics_object,p_columns="all",p=0.05,bin_width=0.01){
arguments<-as.list(match.call())
if(!is.romics_object(romics_object) | missing(romics_object)) {stop("romics_object is missing or is not in the appropriate format")}
if(missing(p_columns)){p_columns="all"}
if(!is.character(p_columns)){stop("'p_columns' has to be a character vector.")}
if(missing(p)|!is.numeric(p)){p=0.05}
pcol<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))|grepl(".*_padj$",colnames(romics_object$statistics))]
if(p_columns!="all"){pcol<-pcol[,colnames(pcol) %in% p_columns]}
for (i in 1:ncol(pcol)){
p1<-p
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
print(ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p1,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP())
}
}
pFrequencyPlot(romics_object)
pFrequencyPlot<-function(romics_object,p_columns="all",p=0.05,bin_width=0.01){
arguments<-as.list(match.call())
if(!is.romics_object(romics_object) | missing(romics_object)) {stop("romics_object is missing or is not in the appropriate format")}
if(missing(p_columns)){p_columns="all"}
if(!is.character(p_columns)){stop("'p_columns' has to be a character vector.")}
if(missing(p)|!is.numeric(p)){p=0.05}
pcol<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))|grepl(".*_padj$",colnames(romics_object$statistics))]
if(p_columns!="all"){pcol<-pcol[,colnames(pcol) %in% p_columns]}
for (i in 1:ncol(pcol)){
p1<-p
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
print(ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p1,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP())
}
}
test
pFrequencyPlot<-function(romics_object,p_columns="all",p=0.05,bin_width=0.01){
arguments<-as.list(match.call())
if(!is.romics_object(romics_object) | missing(romics_object)) {stop("romics_object is missing or is not in the appropriate format")}
if(missing(p_columns)){p_columns="all"}
if(!is.character(p_columns)){stop("p_columns has to be a character vector.")}
if(missing(p)|!is.numeric(p)){p=0.05}
pcol<-romics_object$statistics[, grepl(".*_p$",colnames(romics_object$statistics))|grepl(".*_padj$",colnames(romics_object$statistics))]
if(p_columns!="all"){pcol<-pcol[,colnames(pcol) %in% p_columns]}
for (i in 1:ncol(pcol)){
p1<-p
pval<-data.frame(ids=rownames(pcol), p=as.numeric(t(pcol[i])))
print(paste0(sum(pval<p)," with ",colnames(pcol)[i],"<",p))
print(ggplot(pval, aes(p)) +
geom_histogram(binwidth = bin_width)+
ggtitle(paste0("Frequency plot: ",colnames(pcol[i])))+geom_vline(xintercept=p,linetype="dashed", color = "red")+
geom_text(aes(x=p1,y=max(hist(pval$p, seq(0,1,by=bin_width), plot = FALSE)$counts)/2), label=paste0("\n",colnames(pcol)[i],"<",p),colour="red",angle=90)+
theme_ROP())
}
}
pFrequencyPlot(romics_object)
pFrequencyPlot(romics_proteins)
pFrequencyPlot(romics_proteins)
devtools::document()
devtools::document()
