if(LRI_detected$ligand_2_detected[i]==TRUE){t$L2[i]<-LRI_detected$LIGAND_2[i]}
if(LRI_detected$receptor_1_detected[i]==TRUE){t$R1[i]<-LRI_detected$RECEPTOR_1[i]}
if(LRI_detected$receptor_2_detected[i]==TRUE){t$R2[i]<-LRI_detected$RECEPTOR_2[i]}
if(LRI_detected$receptor_3_detected[i]==TRUE){t$R3[i]<-LRI_detected$RECEPTOR_3[i]}
if(LRI_detected$ligand_1_up[i]==TRUE){t$L1_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_1_down[i]==TRUE){t$L1_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_1_detected[i]==TRUE & is.na(t$L1_stat[i])){t$L1_stat[i]<-"not_significant"}
if(LRI_detected$ligand_2_up[i]==TRUE){t$L2_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_2_down[i]==TRUE){t$L2_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_2_detected[i]==TRUE & is.na(t$L2_stat[i])){t$L2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_1_up[i]==TRUE){t$R1_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_1_down[i]==TRUE){t$R1_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_1_detected[i]==TRUE & is.na(t$R1_stat[i])){t$R1_stat[i]<-"not_significant"}
if(LRI_detected$receptor_2_up[i]==TRUE){t$R2_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_2_down[i]==TRUE){t$R2_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_2_detected[i]==TRUE & is.na(t$R2_stat[i])){t$R2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_3_up[i]==TRUE){t$R3_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_3_down[i]==TRUE){t$R3_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_3_detected[i]==TRUE & is.na(t$R3_stat[i])){t$R3_stat[i]<-"not_significant"}
t[i,7:11]
sum(t[i,7:11] %in% c("up_in_BPD","down_in_BPD"))
t[i,7:11] %in% c("up_in_BPD","down_in_BPD")
for (i in 1:nrow(t)){
if(LRI_detected$ligand_1_detected[i]==TRUE){t$L1[i]<-LRI_detected$LIGAND_1[i]}
if(LRI_detected$ligand_2_detected[i]==TRUE){t$L2[i]<-LRI_detected$LIGAND_2[i]}
if(LRI_detected$receptor_1_detected[i]==TRUE){t$R1[i]<-LRI_detected$RECEPTOR_1[i]}
if(LRI_detected$receptor_2_detected[i]==TRUE){t$R2[i]<-LRI_detected$RECEPTOR_2[i]}
if(LRI_detected$receptor_3_detected[i]==TRUE){t$R3[i]<-LRI_detected$RECEPTOR_3[i]}
if(LRI_detected$ligand_1_up[i]==TRUE){t$L1_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_1_down[i]==TRUE){t$L1_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_1_detected[i]==TRUE & is.na(t$L1_stat[i])){t$L1_stat[i]<-"not_significant"}
if(LRI_detected$ligand_2_up[i]==TRUE){t$L2_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_2_down[i]==TRUE){t$L2_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_2_detected[i]==TRUE & is.na(t$L2_stat[i])){t$L2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_1_up[i]==TRUE){t$R1_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_1_down[i]==TRUE){t$R1_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_1_detected[i]==TRUE & is.na(t$R1_stat[i])){t$R1_stat[i]<-"not_significant"}
if(LRI_detected$receptor_2_up[i]==TRUE){t$R2_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_2_down[i]==TRUE){t$R2_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_2_detected[i]==TRUE & is.na(t$R2_stat[i])){t$R2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_3_up[i]==TRUE){t$R3_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_3_down[i]==TRUE){t$R3_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_3_detected[i]==TRUE & is.na(t$R3_stat[i])){t$R3_stat[i]<-"not_significant"}
t$number_of_modulated[i]<-sum(t[i,7:11] %in% c("up_in_BPD","down_in_BPD"))
}
t<-data.frame(matrix(nrow=nrow(LRI_detected),ncol=13))
colnames(t)<-c("LRI","L1","L2","R1","R2","R3","L1_stat","L2_stat","R1_stat","R2_stat","R3_stat","number of detected","number_of_modulated")
t$LRI<-LRI_detected$LRI
for (i in 1:nrow(t)){
if(LRI_detected$ligand_1_detected[i]==TRUE){t$L1[i]<-LRI_detected$LIGAND_1[i]}
if(LRI_detected$ligand_2_detected[i]==TRUE){t$L2[i]<-LRI_detected$LIGAND_2[i]}
if(LRI_detected$receptor_1_detected[i]==TRUE){t$R1[i]<-LRI_detected$RECEPTOR_1[i]}
if(LRI_detected$receptor_2_detected[i]==TRUE){t$R2[i]<-LRI_detected$RECEPTOR_2[i]}
if(LRI_detected$receptor_3_detected[i]==TRUE){t$R3[i]<-LRI_detected$RECEPTOR_3[i]}
if(LRI_detected$ligand_1_up[i]==TRUE){t$L1_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_1_down[i]==TRUE){t$L1_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_1_detected[i]==TRUE & is.na(t$L1_stat[i])){t$L1_stat[i]<-"not_significant"}
if(LRI_detected$ligand_2_up[i]==TRUE){t$L2_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_2_down[i]==TRUE){t$L2_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_2_detected[i]==TRUE & is.na(t$L2_stat[i])){t$L2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_1_up[i]==TRUE){t$R1_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_1_down[i]==TRUE){t$R1_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_1_detected[i]==TRUE & is.na(t$R1_stat[i])){t$R1_stat[i]<-"not_significant"}
if(LRI_detected$receptor_2_up[i]==TRUE){t$R2_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_2_down[i]==TRUE){t$R2_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_2_detected[i]==TRUE & is.na(t$R2_stat[i])){t$R2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_3_up[i]==TRUE){t$R3_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_3_down[i]==TRUE){t$R3_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_3_detected[i]==TRUE & is.na(t$R3_stat[i])){t$R3_stat[i]<-"not_significant"}
t$number_of_modulated[i]<-sum(!is.na(t[i,2:6]))
t$number_of_modulated[i]<-sum(t[i,7:11] %in% c("up_in_BPD","down_in_BPD"))
}
View(t)
!is.na(t[i,2:6])
t<-data.frame(matrix(nrow=nrow(LRI_detected),ncol=13))
colnames(t)<-c("LRI","L1","L2","R1","R2","R3","L1_stat","L2_stat","R1_stat","R2_stat","R3_stat","number of detected","number_of_modulated")
t$LRI<-LRI_detected$LRI
for (i in 1:nrow(t)){
if(LRI_detected$ligand_1_detected[i]==TRUE){t$L1[i]<-LRI_detected$LIGAND_1[i]}
if(LRI_detected$ligand_2_detected[i]==TRUE){t$L2[i]<-LRI_detected$LIGAND_2[i]}
if(LRI_detected$receptor_1_detected[i]==TRUE){t$R1[i]<-LRI_detected$RECEPTOR_1[i]}
if(LRI_detected$receptor_2_detected[i]==TRUE){t$R2[i]<-LRI_detected$RECEPTOR_2[i]}
if(LRI_detected$receptor_3_detected[i]==TRUE){t$R3[i]<-LRI_detected$RECEPTOR_3[i]}
if(LRI_detected$ligand_1_up[i]==TRUE){t$L1_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_1_down[i]==TRUE){t$L1_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_1_detected[i]==TRUE & is.na(t$L1_stat[i])){t$L1_stat[i]<-"not_significant"}
if(LRI_detected$ligand_2_up[i]==TRUE){t$L2_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_2_down[i]==TRUE){t$L2_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_2_detected[i]==TRUE & is.na(t$L2_stat[i])){t$L2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_1_up[i]==TRUE){t$R1_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_1_down[i]==TRUE){t$R1_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_1_detected[i]==TRUE & is.na(t$R1_stat[i])){t$R1_stat[i]<-"not_significant"}
if(LRI_detected$receptor_2_up[i]==TRUE){t$R2_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_2_down[i]==TRUE){t$R2_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_2_detected[i]==TRUE & is.na(t$R2_stat[i])){t$R2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_3_up[i]==TRUE){t$R3_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_3_down[i]==TRUE){t$R3_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_3_detected[i]==TRUE & is.na(t$R3_stat[i])){t$R3_stat[i]<-"not_significant"}
t$number_of_detected[i]<-sum(!is.na(t[i,2:6]))
t$number_of_modulated[i]<-sum(t[i,7:11] %in% c("up_in_BPD","down_in_BPD"))
}
t<-data.frame(matrix(nrow=nrow(LRI_detected),ncol=13))
colnames(t)<-c("LRI","L1","L2","R1","R2","R3","L1_stat","L2_stat","R1_stat","R2_stat","R3_stat","number of detected","number_of_modulated")
t$LRI<-LRI_detected$LRI
for (i in 1:nrow(t)){
if(LRI_detected$ligand_1_detected[i]==TRUE){t$L1[i]<-LRI_detected$LIGAND_1[i]}
if(LRI_detected$ligand_2_detected[i]==TRUE){t$L2[i]<-LRI_detected$LIGAND_2[i]}
if(LRI_detected$receptor_1_detected[i]==TRUE){t$R1[i]<-LRI_detected$RECEPTOR_1[i]}
if(LRI_detected$receptor_2_detected[i]==TRUE){t$R2[i]<-LRI_detected$RECEPTOR_2[i]}
if(LRI_detected$receptor_3_detected[i]==TRUE){t$R3[i]<-LRI_detected$RECEPTOR_3[i]}
if(LRI_detected$ligand_1_up[i]==TRUE){t$L1_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_1_down[i]==TRUE){t$L1_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_1_detected[i]==TRUE & is.na(t$L1_stat[i])){t$L1_stat[i]<-"not_significant"}
if(LRI_detected$ligand_2_up[i]==TRUE){t$L2_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_2_down[i]==TRUE){t$L2_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_2_detected[i]==TRUE & is.na(t$L2_stat[i])){t$L2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_1_up[i]==TRUE){t$R1_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_1_down[i]==TRUE){t$R1_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_1_detected[i]==TRUE & is.na(t$R1_stat[i])){t$R1_stat[i]<-"not_significant"}
if(LRI_detected$receptor_2_up[i]==TRUE){t$R2_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_2_down[i]==TRUE){t$R2_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_2_detected[i]==TRUE & is.na(t$R2_stat[i])){t$R2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_3_up[i]==TRUE){t$R3_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_3_down[i]==TRUE){t$R3_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_3_detected[i]==TRUE & is.na(t$R3_stat[i])){t$R3_stat[i]<-"not_significant"}
t$number_of_detected[i]<-sum(!is.na(t[i,2:6]))
t$number_of_modulated[i]<-sum(t[i,7:11] %in% c("up_in_BPD","down_in_BPD"))
}
write.csv(t,file="03_output_files/Ligand_receptors_detected.csv",row.names = F)
detected_p<-rownames(romics_proteins$statistics)
mod_up<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`>0]
mod_down<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`>0]
detected_p_genes<-data.frame(UniProt_ID=detected_p)
mod_up_genes<-data.frame(UniProt_ID=mod_up)
mod_down_genes<-data.frame(UniProt_ID=mod_down)
detected_p_genes<-data.frame(UniProt_ID=detected_p)
mod_up_genes<-data.frame(UniProt_ID=mod_up)
mod_down_genes<-data.frame(UniProt_ID=mod_down)
LRI_human<-scDiffCom::LRI_human$LRI_curated
# the list of genes detected AND modulated is extracted
detected_p<-rownames(romics_proteins$statistics)
mod_up<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`>0]
mod_down<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`>0]
detected_p_genes<-data.frame(UniProt_ID=detected_p)
mod_up_genes<-data.frame(UniProt_ID=mod_up)
mod_down_genes<-data.frame(UniProt_ID=mod_down)
detected_p_genes_table<-merge(detected_p_genes,UniProtTable,by.x=1,by.y=2)
stats_columns<-cbind(Uniprot_IDs= rownames(romics_proteins$statistics), BPD_vs_Ctrl_Ttest_p=romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p, log_FC=romics_proteins$statistics$`log(BPD/Ctrl)`)
nrow(stats_columns)
detected_p_genes_table<-merge(detected_p_genes,UniProtTable,by.x=1,by.y=2)
mod_up_genes_table<-merge(mod_up_genes,UniProtTable,by.x=1,by.y=2)
mod_down_genes_table<-merge(mod_down_genes,UniProtTable,by.x=1,by.y=2)
detected_p_genes<-gsub("\\s.*","",detected_p_genes_table$Gene_Name)
mod_up_genes<-gsub("\\s.*","",mod_up_genes_table$Gene_Name)
mod_down_genes<-gsub("\\s.*","",mod_down_genes_table$Gene_Name)
LRI_detected<-LRI_human[LRI_human$LIGAND_1 %in% detected_p_genes |
LRI_human$LIGAND_2 %in% detected_p_genes |
LRI_human$RECEPTOR_1 %in% detected_p_genes|
LRI_human$RECEPTOR_2 %in% detected_p_genes|
LRI_human$RECEPTOR_3 %in% detected_p_genes]
LRI_detected$ligand_1_detected<-LRI_detected$LIGAND_1 %in% detected_p_genes
LRI_detected$ligand_2_detected<-LRI_detected$LIGAND_2 %in% detected_p_genes
LRI_detected$receptor_1_detected<-LRI_detected$RECEPTOR_1 %in% detected_p_genes
LRI_detected$receptor_2_detected<-LRI_detected$RECEPTOR_2 %in% detected_p_genes
LRI_detected$receptor_3_detected<-LRI_detected$RECEPTOR_3 %in% detected_p_genes
LRI_detected$ligand_1_up<-LRI_detected$LIGAND_1 %in% mod_up_genes
LRI_detected$ligand_2_up<-LRI_detected$LIGAND_2 %in% mod_up_genes
LRI_detected$receptor_1_up<-LRI_detected$RECEPTOR_1 %in% mod_up_genes
LRI_detected$receptor_2_up<-LRI_detected$RECEPTOR_2 %in% mod_up_genes
LRI_detected$receptor_3_up<-LRI_detected$RECEPTOR_3 %in% mod_up_genes
LRI_detected$ligand_1_down<-LRI_detected$LIGAND_1 %in% mod_down_genes
LRI_detected$ligand_2_down<-LRI_detected$LIGAND_2 %in% mod_down_genes
LRI_detected$receptor_1_down<-LRI_detected$RECEPTOR_1 %in% mod_down_genes
LRI_detected$receptor_2_down<-LRI_detected$RECEPTOR_2 %in% mod_down_genes
LRI_detected$receptor_3_down<-LRI_detected$RECEPTOR_3 %in% mod_down_genes
detected_count<-cbind(LRI_detected$ligand_1_detected,LRI_detected$ligand_2_detected,LRI_detected$receptor_1_detected,LRI_detected$receptor_2_detected,LRI_detected$receptor_3_detected)
detected_count_ligand<-cbind(LRI_detected$ligand_1_detected,LRI_detected$ligand_2_detected)
detected_count_receptor<-cbind(LRI_detected$receptor_1_detected,LRI_detected$receptor_2_detected,LRI_detected$receptor_3_detected)
LRI_detected$number_of_detected_LR<-rowSums(detected_count)
LRI_detected$number_of_L<-rowSums(detected_count_ligand)
LRI_detected$number_of_R<-rowSums(detected_count_receptor)
t<-data.frame(matrix(nrow=nrow(LRI_detected),ncol=13))
colnames(t)<-c("LRI","L1","L2","R1","R2","R3","L1_stat","L2_stat","R1_stat","R2_stat","R3_stat","number of detected","number_of_modulated")
t$LRI<-LRI_detected$LRI
i<-1
if(LRI_detected$ligand_1_detected[i]==TRUE){t$L1[i]<-LRI_detected$LIGAND_1[i]}
if(LRI_detected$ligand_2_detected[i]==TRUE){t$L2[i]<-LRI_detected$LIGAND_2[i]}
if(LRI_detected$receptor_1_detected[i]==TRUE){t$R1[i]<-LRI_detected$RECEPTOR_1[i]}
if(LRI_detected$receptor_2_detected[i]==TRUE){t$R2[i]<-LRI_detected$RECEPTOR_2[i]}
if(LRI_detected$receptor_3_detected[i]==TRUE){t$R3[i]<-LRI_detected$RECEPTOR_3[i]}
mod_up<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`>0]
mod_down<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`>0]
#list of ligands and receptors are loaded from the package scDiffcom
LRI_human<-scDiffCom::LRI_human$LRI_curated
# the list of genes detected AND modulated is extracted
detected_p<-rownames(romics_proteins$statistics)
mod_up<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`>0]
mod_down<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`<0]
detected_p_genes<-data.frame(UniProt_ID=detected_p)
mod_up_genes<-data.frame(UniProt_ID=mod_up)
mod_down_genes<-data.frame(UniProt_ID=mod_down)
detected_p_genes_table<-merge(detected_p_genes,UniProtTable,by.x=1,by.y=2)
stats_columns<-cbind(Uniprot_IDs= rownames(romics_proteins$statistics), BPD_vs_Ctrl_Ttest_p=romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p, log_FC=romics_proteins$statistics$`log(BPD/Ctrl)`)
nrow(stats_columns)
detected_p_genes_table<-merge(detected_p_genes,UniProtTable,by.x=1,by.y=2)
mod_up_genes_table<-merge(mod_up_genes,UniProtTable,by.x=1,by.y=2)
mod_down_genes_table<-merge(mod_down_genes,UniProtTable,by.x=1,by.y=2)
detected_p_genes<-gsub("\\s.*","",detected_p_genes_table$Gene_Name)
mod_up_genes<-gsub("\\s.*","",mod_up_genes_table$Gene_Name)
mod_down_genes<-gsub("\\s.*","",mod_down_genes_table$Gene_Name)
LRI_detected<-LRI_human[LRI_human$LIGAND_1 %in% detected_p_genes |
LRI_human$LIGAND_2 %in% detected_p_genes |
LRI_human$RECEPTOR_1 %in% detected_p_genes|
LRI_human$RECEPTOR_2 %in% detected_p_genes|
LRI_human$RECEPTOR_3 %in% detected_p_genes]
LRI_detected$ligand_1_detected<-LRI_detected$LIGAND_1 %in% detected_p_genes
LRI_detected$ligand_2_detected<-LRI_detected$LIGAND_2 %in% detected_p_genes
LRI_detected$receptor_1_detected<-LRI_detected$RECEPTOR_1 %in% detected_p_genes
LRI_detected$receptor_2_detected<-LRI_detected$RECEPTOR_2 %in% detected_p_genes
LRI_detected$receptor_3_detected<-LRI_detected$RECEPTOR_3 %in% detected_p_genes
LRI_detected$ligand_1_up<-LRI_detected$LIGAND_1 %in% mod_up_genes
LRI_detected$ligand_2_up<-LRI_detected$LIGAND_2 %in% mod_up_genes
LRI_detected$receptor_1_up<-LRI_detected$RECEPTOR_1 %in% mod_up_genes
LRI_detected$receptor_2_up<-LRI_detected$RECEPTOR_2 %in% mod_up_genes
LRI_detected$receptor_3_up<-LRI_detected$RECEPTOR_3 %in% mod_up_genes
LRI_detected$ligand_1_down<-LRI_detected$LIGAND_1 %in% mod_down_genes
LRI_detected$ligand_2_down<-LRI_detected$LIGAND_2 %in% mod_down_genes
LRI_detected$receptor_1_down<-LRI_detected$RECEPTOR_1 %in% mod_down_genes
LRI_detected$receptor_2_down<-LRI_detected$RECEPTOR_2 %in% mod_down_genes
LRI_detected$receptor_3_down<-LRI_detected$RECEPTOR_3 %in% mod_down_genes
detected_count<-cbind(LRI_detected$ligand_1_detected,LRI_detected$ligand_2_detected,LRI_detected$receptor_1_detected,LRI_detected$receptor_2_detected,LRI_detected$receptor_3_detected)
detected_count_ligand<-cbind(LRI_detected$ligand_1_detected,LRI_detected$ligand_2_detected)
detected_count_receptor<-cbind(LRI_detected$receptor_1_detected,LRI_detected$receptor_2_detected,LRI_detected$receptor_3_detected)
LRI_detected$number_of_detected_LR<-rowSums(detected_count)
LRI_detected$number_of_L<-rowSums(detected_count_ligand)
LRI_detected$number_of_R<-rowSums(detected_count_receptor)
t<-data.frame(matrix(nrow=nrow(LRI_detected),ncol=13))
colnames(t)<-c("LRI","L1","L2","R1","R2","R3","L1_stat","L2_stat","R1_stat","R2_stat","R3_stat","number of detected","number_of_modulated")
t$LRI<-LRI_detected$LRI
for (i in 1:nrow(t)){
if(LRI_detected$ligand_1_detected[i]==TRUE){t$L1[i]<-LRI_detected$LIGAND_1[i]}
if(LRI_detected$ligand_2_detected[i]==TRUE){t$L2[i]<-LRI_detected$LIGAND_2[i]}
if(LRI_detected$receptor_1_detected[i]==TRUE){t$R1[i]<-LRI_detected$RECEPTOR_1[i]}
if(LRI_detected$receptor_2_detected[i]==TRUE){t$R2[i]<-LRI_detected$RECEPTOR_2[i]}
if(LRI_detected$receptor_3_detected[i]==TRUE){t$R3[i]<-LRI_detected$RECEPTOR_3[i]}
if(LRI_detected$ligand_1_up[i]==TRUE){t$L1_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_1_down[i]==TRUE){t$L1_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_1_detected[i]==TRUE & is.na(t$L1_stat[i])){t$L1_stat[i]<-"not_significant"}
if(LRI_detected$ligand_2_up[i]==TRUE){t$L2_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_2_down[i]==TRUE){t$L2_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_2_detected[i]==TRUE & is.na(t$L2_stat[i])){t$L2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_1_up[i]==TRUE){t$R1_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_1_down[i]==TRUE){t$R1_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_1_detected[i]==TRUE & is.na(t$R1_stat[i])){t$R1_stat[i]<-"not_significant"}
if(LRI_detected$receptor_2_up[i]==TRUE){t$R2_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_2_down[i]==TRUE){t$R2_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_2_detected[i]==TRUE & is.na(t$R2_stat[i])){t$R2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_3_up[i]==TRUE){t$R3_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_3_down[i]==TRUE){t$R3_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_3_detected[i]==TRUE & is.na(t$R3_stat[i])){t$R3_stat[i]<-"not_significant"}
t$number_of_detected[i]<-sum(!is.na(t[i,2:6]))
t$number_of_modulated[i]<-sum(t[i,7:11] %in% c("up_in_BPD","down_in_BPD"))
}
write.csv(t,file="03_output_files/Ligand_receptors_detected.csv",row.names = F)
write.csv(t,file="03_output_files/Ligand_receptors_detected.csv",row.names = F)
#list of ligands and receptors are loaded from the package scDiffcom
LRI_human<-scDiffCom::LRI_human$LRI_curated
# the list of genes detected AND modulated is extracted
detected_p<-rownames(romics_proteins$statistics)
mod_up<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`>0]
mod_down<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`<0]
detected_p_genes<-data.frame(UniProt_ID=detected_p)
mod_up_genes<-data.frame(UniProt_ID=mod_up)
mod_down_genes<-data.frame(UniProt_ID=mod_down)
detected_p_genes_table<-merge(detected_p_genes,UniProtTable,by.x=1,by.y=2)
stats_columns<-cbind(Uniprot_IDs= rownames(romics_proteins$statistics), BPD_vs_Ctrl_Ttest_p=romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p, log_FC=romics_proteins$statistics$`log(BPD/Ctrl)`)
nrow(stats_columns)
detected_p_genes_table<-merge(detected_p_genes,UniProtTable,by.x=1,by.y=2)
mod_up_genes_table<-merge(mod_up_genes,UniProtTable,by.x=1,by.y=2)
mod_down_genes_table<-merge(mod_down_genes,UniProtTable,by.x=1,by.y=2)
detected_p_genes<-gsub("\\s.*","",detected_p_genes_table$Gene_Name)
mod_up_genes<-gsub("\\s.*","",mod_up_genes_table$Gene_Name)
mod_down_genes<-gsub("\\s.*","",mod_down_genes_table$Gene_Name)
LRI_detected<-LRI_human[LRI_human$LIGAND_1 %in% detected_p_genes |
LRI_human$LIGAND_2 %in% detected_p_genes |
LRI_human$RECEPTOR_1 %in% detected_p_genes|
LRI_human$RECEPTOR_2 %in% detected_p_genes|
LRI_human$RECEPTOR_3 %in% detected_p_genes]
LRI_detected$ligand_1_detected<-LRI_detected$LIGAND_1 %in% detected_p_genes
LRI_detected$ligand_2_detected<-LRI_detected$LIGAND_2 %in% detected_p_genes
LRI_detected$receptor_1_detected<-LRI_detected$RECEPTOR_1 %in% detected_p_genes
LRI_detected$receptor_2_detected<-LRI_detected$RECEPTOR_2 %in% detected_p_genes
LRI_detected$receptor_3_detected<-LRI_detected$RECEPTOR_3 %in% detected_p_genes
LRI_detected$ligand_1_up<-LRI_detected$LIGAND_1 %in% mod_up_genes
LRI_detected$ligand_2_up<-LRI_detected$LIGAND_2 %in% mod_up_genes
LRI_detected$receptor_1_up<-LRI_detected$RECEPTOR_1 %in% mod_up_genes
LRI_detected$receptor_2_up<-LRI_detected$RECEPTOR_2 %in% mod_up_genes
LRI_detected$receptor_3_up<-LRI_detected$RECEPTOR_3 %in% mod_up_genes
LRI_detected$ligand_1_down<-LRI_detected$LIGAND_1 %in% mod_down_genes
LRI_detected$ligand_2_down<-LRI_detected$LIGAND_2 %in% mod_down_genes
LRI_detected$receptor_1_down<-LRI_detected$RECEPTOR_1 %in% mod_down_genes
LRI_detected$receptor_2_down<-LRI_detected$RECEPTOR_2 %in% mod_down_genes
LRI_detected$receptor_3_down<-LRI_detected$RECEPTOR_3 %in% mod_down_genes
detected_count<-cbind(LRI_detected$ligand_1_detected,LRI_detected$ligand_2_detected,LRI_detected$receptor_1_detected,LRI_detected$receptor_2_detected,LRI_detected$receptor_3_detected)
detected_count_ligand<-cbind(LRI_detected$ligand_1_detected,LRI_detected$ligand_2_detected)
detected_count_receptor<-cbind(LRI_detected$receptor_1_detected,LRI_detected$receptor_2_detected,LRI_detected$receptor_3_detected)
LRI_detected$number_of_detected_LR<-rowSums(detected_count)
LRI_detected$number_of_L<-rowSums(detected_count_ligand)
LRI_detected$number_of_R<-rowSums(detected_count_receptor)
t<-data.frame(matrix(nrow=nrow(LRI_detected),ncol=13))
colnames(t)<-c("LRI","L1","L2","R1","R2","R3","L1_stat","L2_stat","R1_stat","R2_stat","R3_stat","number_of_detected","number_of_modulated")
t$LRI<-LRI_detected$LRI
for (i in 1:nrow(t)){
if(LRI_detected$ligand_1_detected[i]==TRUE){t$L1[i]<-LRI_detected$LIGAND_1[i]}
if(LRI_detected$ligand_2_detected[i]==TRUE){t$L2[i]<-LRI_detected$LIGAND_2[i]}
if(LRI_detected$receptor_1_detected[i]==TRUE){t$R1[i]<-LRI_detected$RECEPTOR_1[i]}
if(LRI_detected$receptor_2_detected[i]==TRUE){t$R2[i]<-LRI_detected$RECEPTOR_2[i]}
if(LRI_detected$receptor_3_detected[i]==TRUE){t$R3[i]<-LRI_detected$RECEPTOR_3[i]}
if(LRI_detected$ligand_1_up[i]==TRUE){t$L1_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_1_down[i]==TRUE){t$L1_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_1_detected[i]==TRUE & is.na(t$L1_stat[i])){t$L1_stat[i]<-"not_significant"}
if(LRI_detected$ligand_2_up[i]==TRUE){t$L2_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_2_down[i]==TRUE){t$L2_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_2_detected[i]==TRUE & is.na(t$L2_stat[i])){t$L2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_1_up[i]==TRUE){t$R1_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_1_down[i]==TRUE){t$R1_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_1_detected[i]==TRUE & is.na(t$R1_stat[i])){t$R1_stat[i]<-"not_significant"}
if(LRI_detected$receptor_2_up[i]==TRUE){t$R2_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_2_down[i]==TRUE){t$R2_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_2_detected[i]==TRUE & is.na(t$R2_stat[i])){t$R2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_3_up[i]==TRUE){t$R3_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_3_down[i]==TRUE){t$R3_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_3_detected[i]==TRUE & is.na(t$R3_stat[i])){t$R3_stat[i]<-"not_significant"}
t$number[i]<-sum(!is.na(t[i,2:6]))
t$number_of_modulated[i]<-sum(t[i,7:11] %in% c("up_in_BPD","down_in_BPD"))
}
write.csv(t,file="03_output_files/Ligand_receptors_detected.csv",row.names = F)
#list of ligands and receptors are loaded from the package scDiffcom
LRI_human<-scDiffCom::LRI_human$LRI_curated
# the list of genes detected AND modulated is extracted
detected_p<-rownames(romics_proteins$statistics)
mod_up<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`>0]
mod_down<-rownames(romics_proteins$statistics)[romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05&!is.na(romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p<0.05)&romics_proteins$statistics$`log(BPD/Ctrl)`<0]
detected_p_genes<-data.frame(UniProt_ID=detected_p)
mod_up_genes<-data.frame(UniProt_ID=mod_up)
mod_down_genes<-data.frame(UniProt_ID=mod_down)
detected_p_genes_table<-merge(detected_p_genes,UniProtTable,by.x=1,by.y=2)
stats_columns<-cbind(Uniprot_IDs= rownames(romics_proteins$statistics), BPD_vs_Ctrl_Ttest_p=romics_proteins$statistics$BPD_vs_Ctrl_Ttest_p, log_FC=romics_proteins$statistics$`log(BPD/Ctrl)`)
nrow(stats_columns)
detected_p_genes_table<-merge(detected_p_genes,UniProtTable,by.x=1,by.y=2)
mod_up_genes_table<-merge(mod_up_genes,UniProtTable,by.x=1,by.y=2)
mod_down_genes_table<-merge(mod_down_genes,UniProtTable,by.x=1,by.y=2)
detected_p_genes<-gsub("\\s.*","",detected_p_genes_table$Gene_Name)
mod_up_genes<-gsub("\\s.*","",mod_up_genes_table$Gene_Name)
mod_down_genes<-gsub("\\s.*","",mod_down_genes_table$Gene_Name)
LRI_detected<-LRI_human[LRI_human$LIGAND_1 %in% detected_p_genes |
LRI_human$LIGAND_2 %in% detected_p_genes |
LRI_human$RECEPTOR_1 %in% detected_p_genes|
LRI_human$RECEPTOR_2 %in% detected_p_genes|
LRI_human$RECEPTOR_3 %in% detected_p_genes]
LRI_detected$ligand_1_detected<-LRI_detected$LIGAND_1 %in% detected_p_genes
LRI_detected$ligand_2_detected<-LRI_detected$LIGAND_2 %in% detected_p_genes
LRI_detected$receptor_1_detected<-LRI_detected$RECEPTOR_1 %in% detected_p_genes
LRI_detected$receptor_2_detected<-LRI_detected$RECEPTOR_2 %in% detected_p_genes
LRI_detected$receptor_3_detected<-LRI_detected$RECEPTOR_3 %in% detected_p_genes
LRI_detected$ligand_1_up<-LRI_detected$LIGAND_1 %in% mod_up_genes
LRI_detected$ligand_2_up<-LRI_detected$LIGAND_2 %in% mod_up_genes
LRI_detected$receptor_1_up<-LRI_detected$RECEPTOR_1 %in% mod_up_genes
LRI_detected$receptor_2_up<-LRI_detected$RECEPTOR_2 %in% mod_up_genes
LRI_detected$receptor_3_up<-LRI_detected$RECEPTOR_3 %in% mod_up_genes
LRI_detected$ligand_1_down<-LRI_detected$LIGAND_1 %in% mod_down_genes
LRI_detected$ligand_2_down<-LRI_detected$LIGAND_2 %in% mod_down_genes
LRI_detected$receptor_1_down<-LRI_detected$RECEPTOR_1 %in% mod_down_genes
LRI_detected$receptor_2_down<-LRI_detected$RECEPTOR_2 %in% mod_down_genes
LRI_detected$receptor_3_down<-LRI_detected$RECEPTOR_3 %in% mod_down_genes
detected_count<-cbind(LRI_detected$ligand_1_detected,LRI_detected$ligand_2_detected,LRI_detected$receptor_1_detected,LRI_detected$receptor_2_detected,LRI_detected$receptor_3_detected)
detected_count_ligand<-cbind(LRI_detected$ligand_1_detected,LRI_detected$ligand_2_detected)
detected_count_receptor<-cbind(LRI_detected$receptor_1_detected,LRI_detected$receptor_2_detected,LRI_detected$receptor_3_detected)
LRI_detected$number_of_detected_LR<-rowSums(detected_count)
LRI_detected$number_of_L<-rowSums(detected_count_ligand)
LRI_detected$number_of_R<-rowSums(detected_count_receptor)
t<-data.frame(matrix(nrow=nrow(LRI_detected),ncol=13))
colnames(t)<-c("LRI","L1","L2","R1","R2","R3","L1_stat","L2_stat","R1_stat","R2_stat","R3_stat","number_of_detected","number_of_modulated")
t$LRI<-LRI_detected$LRI
for (i in 1:nrow(t)){
if(LRI_detected$ligand_1_detected[i]==TRUE){t$L1[i]<-LRI_detected$LIGAND_1[i]}
if(LRI_detected$ligand_2_detected[i]==TRUE){t$L2[i]<-LRI_detected$LIGAND_2[i]}
if(LRI_detected$receptor_1_detected[i]==TRUE){t$R1[i]<-LRI_detected$RECEPTOR_1[i]}
if(LRI_detected$receptor_2_detected[i]==TRUE){t$R2[i]<-LRI_detected$RECEPTOR_2[i]}
if(LRI_detected$receptor_3_detected[i]==TRUE){t$R3[i]<-LRI_detected$RECEPTOR_3[i]}
if(LRI_detected$ligand_1_up[i]==TRUE){t$L1_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_1_down[i]==TRUE){t$L1_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_1_detected[i]==TRUE & is.na(t$L1_stat[i])){t$L1_stat[i]<-"not_significant"}
if(LRI_detected$ligand_2_up[i]==TRUE){t$L2_stat[i]<-"up_in_BPD"}
if(LRI_detected$ligand_2_down[i]==TRUE){t$L2_stat[i]<-"down_in_BPD"}
if(LRI_detected$ligand_2_detected[i]==TRUE & is.na(t$L2_stat[i])){t$L2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_1_up[i]==TRUE){t$R1_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_1_down[i]==TRUE){t$R1_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_1_detected[i]==TRUE & is.na(t$R1_stat[i])){t$R1_stat[i]<-"not_significant"}
if(LRI_detected$receptor_2_up[i]==TRUE){t$R2_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_2_down[i]==TRUE){t$R2_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_2_detected[i]==TRUE & is.na(t$R2_stat[i])){t$R2_stat[i]<-"not_significant"}
if(LRI_detected$receptor_3_up[i]==TRUE){t$R3_stat[i]<-"up_in_BPD"}
if(LRI_detected$receptor_3_down[i]==TRUE){t$R3_stat[i]<-"down_in_BPD"}
if(LRI_detected$receptor_3_detected[i]==TRUE & is.na(t$R3_stat[i])){t$R3_stat[i]<-"not_significant"}
t$number_of_detected[i]<-sum(!is.na(t[i,2:6]))
t$number_of_modulated[i]<-sum(t[i,7:11] %in% c("up_in_BPD","down_in_BPD"))
}
write.csv(t,file="03_output_files/Ligand_receptors_detected.csv",row.names = F)
matrix<-read.csv("01_source_files/MatrisomeDB_naba_2016_matrix_biology_human_uniprot.csv")
TF<-read.csv("01_source_files/Human_TFBD_3_UniProt.csv")
lipid_related<-read.csv("01_source_files/Lipid Maps proteome database.csv")
View(lipid_related)
View(UniProtTable)
colnames(UniProtTable)
matrix<-merge(matrix,UniProtTable,by.x=1,by.y = "Uniprot_Accession")
TF<-merge(TF,UniProtTable,by.x=1,by.y = "Uniprot_Accession")
lipid_related<-merge(lipid_related,UniProtTable,by.x=1,by.y = "Uniprot_Accession")
View(matrix)
matrix<-matrix[,2]
TF<-TF[,2]
lipid_related<-lipid_related[,2]
matrix<-read.csv("01_source_files/MatrisomeDB_naba_2016_matrix_biology_human_uniprot.csv")
TF<-read.csv("01_source_files/Human_TFBD_3_UniProt.csv")
lipid_related<-read.csv("01_source_files/Lipid Maps proteome database.csv")
matrix<-merge(matrix,UniProtTable,by.x=1,by.y = "Uniprot_Accession")
TF<-merge(TF,UniProtTable,by.x=1,by.y = "Uniprot_Accession")
lipid_related<-merge(lipid_related,UniProtTable,by.x=1,by.y = "Uniprot_Accession")
matrix<-matrix[,2]
TF<-TF[,2]
lipid_related<-lipid_related[,2]
romics_matrix<-featureSubset(romics_proteins,feature_list = matrix)
romicsCalculatedStats(romics_matrix)
romicsVolcano(romics_matrix,plot=1, plot_type = "plotly")
romicsVolcano(romics_matrix,plot=4, plot_type = "plotly")
romicsVolcano(romics_matrix,plot=4, plot_type = "plotly", min_fold_change = 0)
romicsHeatmap(romics_matrix,RowSideColor = "BPD_vs_Ctrl_Ttest_p")
romics_TF<-featureSubset(romics_proteins,feature_list = TF)
romicsVolcano(romics_matrix,plot=4, plot_type = "plotly", min_fold_change = 0)
romicsVolcano(romics_TF,plot=4, plot_type = "plotly", min_fold_change = 0)
romics_lipid_related<-featureSubset(romics_proteins,feature_list = lipid_related)
romicsVolcano(romics_lipid_related,plot=4, plot_type = "plotly", min_fold_change = 0)
romicsVolcano(romics_matrix,plot=4,  min_fold_change = 0
,plot_type = "plotly"
)
View(UniProtTable)
View(UniProtTable_GO)
View(UniProtTable_KEGG)
View(UniProtTable_REACTOME)
results_lipid_related<-romicsExportData(romics_lipid_related,statistics = T,missing_data = T)
results_lipid_related<-merge(results_lipid_related,UniProtTable,by.x=0,by.y="Uniprot_ID")
write.csv(results_lipid_related, file= "./03_output_files/results_lipid_related_proteins_with_stats.csv")
results_TF<-romicsExportData(romics_TF,statistics = T,missing_data = T)
results_TF<-merge(results_TF,UniProtTable,by.x=0,by.y="Uniprot_ID")
write.csv(results_TF, file= "./03_output_files/results_transcription_factor_proteins_with_stats.csv")
results_matrix<-romicsExportData(romics_matrix,statistics = T,missing_data = T)
results_matrix<-merge(results_matrix,UniProtTable,by.x=0,by.y="Uniprot_ID")
write.csv(results_matrix, file= "./03_output_files/results_matrisome_proteins_with_stats.csv")
results_lipid_related<-romicsExportData(romics_lipid_related,statistics = T,missing_data = T)
results_lipid_related<-merge(results_lipid_related,UniProtTable,by.x=0,by.y="Uniprot_ID")
write.csv(results_lipid_related, file= "./03_output_files/results_lipid_related_proteins_with_stats.csv")
library("ggpubr")
Figs<-romicsChangeFactor(romics_proteins,main_factor= "Disease_status")
boxplotscatter<-function(protein_name="protein_name"){
title<-rownames(Figs$data)[grepl(protein_name,rownames(Figs$data))]
title<-paste0(title," - ",gsub(" .*","",proteinsIDs$Gene_Name[proteinsIDs$Uniprot_ID %in% title]))
yposition <- max(Figs$data[grepl(paste0(".*",protein_name,".*"),rownames(Figs$data)),])
singleVariablePlot(Figs,variable =protein_name)+ggtitle(label = title)+
geom_bracket(xmin = "BPD", xmax = "Ctrl", y.position = yposition+0.5, label =formatC(Figs$statistics[grepl(paste0(".*",protein_name,".*"),rownames(Figs$statistics)),colnames(Figs$statistics)=="BPD_vs_Ctrl_Ttest_p"], format = "f"))+
geom_bracket(xmin = "BPD", xmax = "Healed", y.position = yposition+1, label =formatC(Figs$statistics[grepl(paste0(".*",protein_name,".*"),rownames(Figs$statistics)),colnames(Figs$statistics)=="BPD_vs_Healed_Ttest_p"], format = "f"))+
geom_bracket(xmin = "Ctrl", xmax = "Healed", y.position = yposition+0.75, label =formatC(Figs$statistics[grepl(paste0(".*",protein_name,".*"),rownames(Figs$statistics)),colnames(Figs$statistics)=="Ctrl_vs_Healed_Ttest_p"], format = "f"))
}
boxplotscatter("NOTCH2_HUMAN")
boxplotscatter("NOTC2_HUMAN")
library("ggpubr")
Figs<-romicsChangeFactor(romics_proteins,main_factor= "Disease_group")
boxplotscatter<-function(protein_name="protein_name"){
title<-rownames(Figs$data)[grepl(protein_name,rownames(Figs$data))]
title<-paste0(title," - ",gsub(" .*","",proteinsIDs$Gene_Name[proteinsIDs$Uniprot_ID %in% title]))
yposition <- max(Figs$data[grepl(paste0(".*",protein_name,".*"),rownames(Figs$data)),])
singleVariablePlot(Figs,variable =protein_name)+ggtitle(label = title)+
geom_bracket(xmin = "Chronic_BPD", xmax = "Chronic_Ctrl", y.position = yposition+0.25, label =formatC(Figs$statistics[grepl(paste0(".*",protein_name,".*"),rownames(Figs$statistics)),colnames(Figs$statistics)=="Chronic_BPD_vs_Chronic_Ctrl_Ttest_p"], format = "f"))+
geom_bracket(xmin = "Evolving_BPD", xmax = "Young_Ctrl", y.position = yposition+0.25, label =formatC(Figs$statistics[grepl(paste0(".*",protein_name,".*"),rownames(Figs$statistics)),colnames(Figs$statistics)=="Evolving_BPD_vs_Young_Ctrl_Ttest_p"], format = "f"))+
geom_bracket(xmin = "Chronic_BPD", xmax = "Evolving_BPD", y.position = yposition+0.5, label =formatC(Figs$statistics[grepl(paste0(".*",protein_name,".*"),rownames(Figs$statistics)),colnames(Figs$statistics)=="Chronic_BPD_vs_Evolving_BPD_Ttest_p"], format = "f"))+
geom_bracket(xmin = "Chronic_Ctrl", xmax = "Young_Ctrl", y.position = yposition+0.75, label =formatC(Figs$statistics[grepl(paste0(".*",protein_name,".*"),rownames(Figs$statistics)),colnames(Figs$statistics)=="Chronic_Ctrl_vs_Young_Ctrl_Ttest_p"], format = "f"))+
geom_bracket(xmin = "Healed", xmax = "Chronic_Ctrl", y.position = yposition+1, label =formatC(Figs$statistics[grepl(paste0(".*",protein_name,".*"),rownames(Figs$statistics)),colnames(Figs$statistics)=="Healed_vs_Chronic_Ctrl_Ttest_p"], format = "f"))
}
boxplotscatter("NOTC2_HUMAN")
boxplotscatter("APOA_HUMAN")
boxplotscatter("APOA1_HUMAN")
library("ggpubr")
Figs<-romicsChangeFactor(romics_proteins,main_factor= "Disease_status")
boxplotscatter<-function(protein_name="protein_name"){
title<-rownames(Figs$data)[grepl(protein_name,rownames(Figs$data))]
title<-paste0(title," - ",gsub(" .*","",proteinsIDs$Gene_Name[proteinsIDs$Uniprot_ID %in% title]))
yposition <- max(Figs$data[grepl(paste0(".*",protein_name,".*"),rownames(Figs$data)),])
singleVariablePlot(Figs,variable =protein_name)+ggtitle(label = title)+
geom_bracket(xmin = "BPD", xmax = "Ctrl", y.position = yposition+0.5, label =formatC(Figs$statistics[grepl(paste0(".*",protein_name,".*"),rownames(Figs$statistics)),colnames(Figs$statistics)=="BPD_vs_Ctrl_Ttest_p"], format = "f"))+
geom_bracket(xmin = "BPD", xmax = "Healed", y.position = yposition+1, label =formatC(Figs$statistics[grepl(paste0(".*",protein_name,".*"),rownames(Figs$statistics)),colnames(Figs$statistics)=="BPD_vs_Healed_Ttest_p"], format = "f"))+
geom_bracket(xmin = "Ctrl", xmax = "Healed", y.position = yposition+0.75, label =formatC(Figs$statistics[grepl(paste0(".*",protein_name,".*"),rownames(Figs$statistics)),colnames(Figs$statistics)=="Ctrl_vs_Healed_Ttest_p"], format = "f"))
}
boxplotscatter("APOA1_HUMAN")
boxplotscatter("APOA2_HUMAN")
boxplotscatter("APOA_HUMAN")
boxplotscatter("APOBR_HUMAN")
boxplotscatter("A4_HUMAN")
boxplotscatter("LRP1_HUMAN")
boxplotscatter("APOL3_HUMAN")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("standR")
library("standR")
