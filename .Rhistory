total_DB_cat_result<- cbind(Type=(rep("total DB by Cat")),total_DB_cat_result)
total_DB_main_result<- cbind(Type=(rep("total DB by Main")),total_DB_main_result)
total_DB_sub_result<- cbind(Type=(rep("total DB by Sub")),total_DB_sub_result)
allchains_cat_result<- cbind(Type=(rep("Specific Chain by Cat")),allchains_cat_result)
allchains_main_result<- cbind(Type=(rep("Specific Chain by Main")),allchains_main_result)
allchains_sub_result<- cbind(Type=(rep("Specific Chain by Sub")),allchains_sub_result)
subclass_mainclass_result<-cbind(Type=(rep("Subclass by Mainclass")),subclass_mainclass_result)
# place all the tables in a globaloutput table
globaloutput_cluster2<-rbind(intact_EASE_cat_result,intact_EASE_main_result,intact_EASE_sub_result,chain_EASE_result,total_carbon_cat_result,total_carbon_main_result,total_carbon_sub_result,total_DB_cat_result,total_DB_main_result,total_DB_sub_result,allchains_cat_result,allchains_main_result,allchains_sub_result,subclass_mainclass_result, allchains_EASE_result)
#filter this output with a pvalue cutoff
filteredGlobalOutput_cluster2<-globaloutput_cluster2[globaloutput_cluster2$`p-value`<0.05&globaloutput_cluster2$Fold.change>1,]
#display the global table after filtering it
datatable(filteredGlobalOutput_cluster2)
#Prepare the table for combination with the two other clusters
filteredGlobalOutput_cluster2<-cbind(cluster="Cluster2",filteredGlobalOutput_cluster2)
#category stack barplot
grid.arrange(intact.cat.stack(universe.intact)+ggtitle("universe"),intact.cat.stack(cluster2.intact)+ggtitle("cluster2"),ncol=2)
#Main class stack barplot
grid.arrange(intact.main.stack(universe.intact)+ggtitle("universe"),intact.main.stack(cluster2.intact)+ggtitle("cluster2"),ncol=2)
#Sub class stack barplot
grid.arrange(intact.sub.stack(universe.intact)+ggtitle("universe"),intact.sub.stack(cluster2.intact)+ggtitle("cluster2"),ncol=2)
# Chain Length stack barplot
grid.arrange(chain.length.stack(universe.chain)+ggtitle("universe"),chain.length.stack(cluster2.chain)+ggtitle("cluster2"),ncol=2)
#Unsaturation stack barplot
grid.arrange(chain.unsat.stack(universe.chain)+ggtitle("universe"),chain.unsat.stack(cluster2.chain)+ggtitle("cluster2"),ncol=2)
#Unique chains barplot (cluster2 and uninverse)
allchains.barplot(cluster2.allchains,universe.allchains)+ggtitle("All chains")
#make Network
lipid_visnetwork_plot(cluster2,filteredGlobalOutput_cluster2,p = 0.05)
lipid.miner(cluster3, name="cluster3", TGcollapse.rm = TRUE)
lipid.miner(universe, name="universe", TGcollapse.rm = TRUE)
# run the EASE test (and create results objects)
intact_EASE_cat_result <- intact.EASE(cluster3.intact$Category, universe.intact$Category)
intact_EASE_main_result <- intact.EASE(cluster3.intact$`Main class`, universe.intact$`Main class`)
intact_EASE_sub_result <- intact.EASE(cluster3.intact$`Sub class`, universe.intact$`Sub class`)
chain_EASE_result <- chain.EASE(cluster3.chain, universe.chain)
allchains_EASE_result <- allchains.EASE(cluster3.allchains, universe.allchains)
# Run the category specific total number of chain carbon enrichment
total_carbon_cat_result<-total.carbon.cat(cluster3.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific total number of chain carbon enrichment
total_carbon_main_result<-total.carbon.main(cluster3.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific total number of chain carbon enrichment
total_carbon_sub_result<-total.carbon.sub(cluster3.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific number of chain DB enrichment
total_DB_cat_result<-total.DB.cat(cluster3.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_main_result<-total.DB.main(cluster3.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_sub_result<-total.DB.sub(cluster3.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific allchains enrichment
allchains_cat_result<-allchains.cat(cluster3.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific allchains enrichment
allchains_main_result<-allchains.main(cluster3.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific allchains enrichment
allchains_sub_result<-allchains.sub(cluster3.intact,universe.intact, enrich=FALSE,test = "EASE")
# subclass enrichment by mainclass (EASE)
subclass_mainclass_result<- subclass.mainclass(cluster3.intact,universe.intact,test= "EASE", enrich=T, p = 0.05)
#reformat the tables to add the type of test
intact_EASE_cat_result<- cbind(Type=(rep("Intact")),intact_EASE_cat_result)
intact_EASE_main_result<- cbind(Type=(rep("Main Class")),intact_EASE_main_result)
intact_EASE_sub_result<- cbind(Type=(rep("Sub Class")),intact_EASE_sub_result)
chain_EASE_result<- cbind(Type=(rep("Chain characteristics")),chain_EASE_result)
allchains_EASE_result<- cbind(Type=(rep("Specific chain")),allchains_EASE_result)
total_carbon_cat_result<- cbind(Type=(rep("TotalCarbon by Cat")),total_carbon_cat_result)
total_carbon_main_result<- cbind(Type=(rep("TotalCarbon by Main")),total_carbon_main_result)
total_carbon_sub_result<- cbind(Type=(rep("TotalCarbon by Sub")),total_carbon_sub_result)
total_DB_cat_result<- cbind(Type=(rep("total DB by Cat")),total_DB_cat_result)
total_DB_main_result<- cbind(Type=(rep("total DB by Main")),total_DB_main_result)
total_DB_sub_result<- cbind(Type=(rep("total DB by Sub")),total_DB_sub_result)
allchains_cat_result<- cbind(Type=(rep("Specific Chain by Cat")),allchains_cat_result)
allchains_main_result<- cbind(Type=(rep("Specific Chain by Main")),allchains_main_result)
allchains_sub_result<- cbind(Type=(rep("Specific Chain by Sub")),allchains_sub_result)
subclass_mainclass_result<-cbind(Type=(rep("Subclass by Mainclass")),subclass_mainclass_result)
# place all the tables in a globaloutput table
globaloutput_cluster3<-rbind(intact_EASE_cat_result,intact_EASE_main_result,intact_EASE_sub_result,chain_EASE_result,total_carbon_cat_result,total_carbon_main_result,total_carbon_sub_result,total_DB_cat_result,total_DB_main_result,total_DB_sub_result,allchains_cat_result,allchains_main_result,allchains_sub_result,subclass_mainclass_result, allchains_EASE_result)
#filter this output with a pvalue cutoff
filteredGlobalOutput_cluster3<-globaloutput_cluster3[globaloutput_cluster3$`p-value`<0.05&globaloutput_cluster3$Fold.change>1,]
#display the global table after filtering it
datatable(filteredGlobalOutput_cluster3)
#Prepare the table for combination with the two other clusters
filteredGlobalOutput_cluster3<-cbind(cluster="Cluster3",filteredGlobalOutput_cluster3)
#category stack barplot
grid.arrange(intact.cat.stack(universe.intact)+ggtitle("universe"),intact.cat.stack(cluster3.intact)+ggtitle("cluster3"),ncol=2)
#Main class stack barplot
grid.arrange(intact.main.stack(universe.intact)+ggtitle("universe"),intact.main.stack(cluster3.intact)+ggtitle("cluster3"),ncol=2)
#Sub class stack barplot
grid.arrange(intact.sub.stack(universe.intact)+ggtitle("universe"),intact.sub.stack(cluster3.intact)+ggtitle("cluster3"),ncol=2)
# Chain Length stack barplot
grid.arrange(chain.length.stack(universe.chain)+ggtitle("universe"),chain.length.stack(cluster3.chain)+ggtitle("cluster3"),ncol=2)
#Unsaturation stack barplot
grid.arrange(chain.unsat.stack(universe.chain)+ggtitle("universe"),chain.unsat.stack(cluster3.chain)+ggtitle("cluster3"),ncol=2)
#Unique chains barplot (cluster3 and uninverse)
allchains.barplot(cluster3.allchains,universe.allchains)+ggtitle("All chains")
#make Network
lipid_visnetwork_plot(cluster3,filteredGlobalOutput_cluster3,p = 0.05)
filteredGlobalOutput_clusters<-rbind(filteredGlobalOutput_cluster1,filteredGlobalOutput_cluster2,filteredGlobalOutput_cluster3)
filteredGlobalOutput_clusters<-filteredGlobalOutput_clusters[!is.na(filteredGlobalOutput_clusters$`p-value`),]
write.table(filteredGlobalOutput_clusters,file="03_output_files/LipidMiniOn_clusters_enrichments.txt",sep = "\t",row.names = F)
romics_lipids<-romicsTtest(romics_lipids,percentage_completeness = 70,var.equal = T)
romicsVolcano(romics_lipids)
pFrequencyPlot(romics_lipids)
up_diseased_vs_control<-rownames(romics_lipids$statistics)[romics_lipids$statistics$Diseased_vs_Control_Ttest_p<0.05 & romics_lipids$statistics$`log(Diseased/Control)`>0]
down_diseased_vs_control<-rownames(romics_lipids$statistics)[romics_lipids$statistics$Diseased_vs_Control_Ttest_p<0.05 & romics_lipids$statistics$`log(Diseased/Control)`<0]
up_recovered_vs_control<-rownames(romics_lipids$statistics)[romics_lipids$statistics$Recovered_vs_Control_Ttest_p<0.05 & romics_lipids$statistics$`log(Recovered/Control)`>0]
down_recovered_vs_control<-rownames(romics_lipids$statistics)[romics_lipids$statistics$Recovered_vs_Control_Ttest_p<0.05 & romics_lipids$statistics$`log(Recovered/Control)`<0]
up_recovered_vs_diseased<-rownames(romics_lipids$statistics)[romics_lipids$statistics$Recovered_vs_Diseased_Ttest_p<0.05 & romics_lipids$statistics$`log(Recovered/Diseased)`>0]
down_recovered_vs_diseased<-rownames(romics_lipids$statistics)[romics_lipids$statistics$Recovered_vs_Diseased_Ttest_p<0.05 & romics_lipids$statistics$`log(Recovered/Diseased)`<0]
lipid.miner(up_diseased_vs_control, name="up_diseased_vs_control", TGcollapse.rm = TRUE)
lipid.miner(universe, name="universe", TGcollapse.rm = TRUE)
# run the EASE test (and create results objects)
intact_EASE_cat_result <- intact.EASE(up_diseased_vs_control.intact$Category, universe.intact$Category)
intact_EASE_main_result <- intact.EASE(up_diseased_vs_control.intact$`Main class`, universe.intact$`Main class`)
intact_EASE_sub_result <- intact.EASE(up_diseased_vs_control.intact$`Sub class`, universe.intact$`Sub class`)
chain_EASE_result <- chain.EASE(up_diseased_vs_control.chain, universe.chain)
allchains_EASE_result <- allchains.EASE(up_diseased_vs_control.allchains, universe.allchains)
# Run the category specific total number of chain carbon enrichment
total_carbon_cat_result<-total.carbon.cat(up_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific total number of chain carbon enrichment
total_carbon_main_result<-total.carbon.main(up_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific total number of chain carbon enrichment
total_carbon_sub_result<-total.carbon.sub(up_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific number of chain DB enrichment
total_DB_cat_result<-total.DB.cat(up_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_main_result<-total.DB.main(up_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_sub_result<-total.DB.sub(up_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific allchains enrichment
allchains_cat_result<-allchains.cat(up_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific allchains enrichment
allchains_main_result<-allchains.main(up_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific allchains enrichment
allchains_sub_result<-allchains.sub(up_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# subclass enrichment by mainclass (EASE)
subclass_mainclass_result<- subclass.mainclass(up_diseased_vs_control.intact,universe.intact,test= "EASE", enrich=T, p = 0.05)
#reformat the tables to add the type of test
intact_EASE_cat_result<- cbind(Type=(rep("Intact")),intact_EASE_cat_result)
intact_EASE_main_result<- cbind(Type=(rep("Main Class")),intact_EASE_main_result)
intact_EASE_sub_result<- cbind(Type=(rep("Sub Class")),intact_EASE_sub_result)
chain_EASE_result<- cbind(Type=(rep("Chain characteristics")),chain_EASE_result)
allchains_EASE_result<- cbind(Type=(rep("Specific chain")),allchains_EASE_result)
total_carbon_cat_result<- cbind(Type=(rep("TotalCarbon by Cat")),total_carbon_cat_result)
total_carbon_main_result<- cbind(Type=(rep("TotalCarbon by Main")),total_carbon_main_result)
total_carbon_sub_result<- cbind(Type=(rep("TotalCarbon by Sub")),total_carbon_sub_result)
total_DB_cat_result<- cbind(Type=(rep("total DB by Cat")),total_DB_cat_result)
total_DB_main_result<- cbind(Type=(rep("total DB by Main")),total_DB_main_result)
total_DB_sub_result<- cbind(Type=(rep("total DB by Sub")),total_DB_sub_result)
allchains_cat_result<- cbind(Type=(rep("Specific Chain by Cat")),allchains_cat_result)
allchains_main_result<- cbind(Type=(rep("Specific Chain by Main")),allchains_main_result)
allchains_sub_result<- cbind(Type=(rep("Specific Chain by Sub")),allchains_sub_result)
subclass_mainclass_result<-cbind(Type=(rep("Subclass by Mainclass")),subclass_mainclass_result)
# place all the tables in a globaloutput table
globaloutput_up_diseased_vs_control<-rbind(intact_EASE_cat_result,intact_EASE_main_result,intact_EASE_sub_result,chain_EASE_result,total_carbon_cat_result,total_carbon_main_result,total_carbon_sub_result,total_DB_cat_result,total_DB_main_result,total_DB_sub_result,allchains_cat_result,allchains_main_result,allchains_sub_result,subclass_mainclass_result, allchains_EASE_result)
#filter this output with a pvalue cutoff
filteredGlobalOutput_up_diseased_vs_control<-globaloutput_up_diseased_vs_control[globaloutput_up_diseased_vs_control$`p-value`<0.05&globaloutput_up_diseased_vs_control$Fold.change>1,]
#display the global table after filtering it
datatable(filteredGlobalOutput_up_diseased_vs_control)
#Prepare the table for combination with the two other clusters
filteredGlobalOutput_up_diseased_vs_control<-cbind(cluster="up_diseased_vs_control",filteredGlobalOutput_up_diseased_vs_control)
#category stack barplot
grid.arrange(intact.cat.stack(universe.intact)+ggtitle("universe"),intact.cat.stack(up_diseased_vs_control.intact)+ggtitle("up_diseased_vs_control"),ncol=2)
#Main class stack barplot
grid.arrange(intact.main.stack(universe.intact)+ggtitle("universe"),intact.main.stack(up_diseased_vs_control.intact)+ggtitle("up_diseased_vs_control"),ncol=2)
#Sub class stack barplot
grid.arrange(intact.sub.stack(universe.intact)+ggtitle("universe"),intact.sub.stack(up_diseased_vs_control.intact)+ggtitle("up_diseased_vs_control"),ncol=2)
# Chain Length stack barplot
grid.arrange(chain.length.stack(universe.chain)+ggtitle("universe"),chain.length.stack(up_diseased_vs_control.chain)+ggtitle("up_diseased_vs_control"),ncol=2)
#Unsaturation stack barplot
grid.arrange(chain.unsat.stack(universe.chain)+ggtitle("universe"),chain.unsat.stack(up_diseased_vs_control.chain)+ggtitle("up_diseased_vs_control"),ncol=2)
#Unique chains barplot (up_diseased_vs_control and uninverse)
allchains.barplot(up_diseased_vs_control.allchains,universe.allchains)+ggtitle("All chains")
#make Network
lipid_visnetwork_plot(up_diseased_vs_control,filteredGlobalOutput_up_diseased_vs_control,p = 0.05)
lipid.miner(down_diseased_vs_control, name="down_diseased_vs_control", TGcollapse.rm = TRUE)
lipid.miner(universe, name="universe", TGcollapse.rm = TRUE)
# run the EASE test (and create results objects)
intact_EASE_cat_result <- intact.EASE(down_diseased_vs_control.intact$Category, universe.intact$Category)
intact_EASE_main_result <- intact.EASE(down_diseased_vs_control.intact$`Main class`, universe.intact$`Main class`)
intact_EASE_sub_result <- intact.EASE(down_diseased_vs_control.intact$`Sub class`, universe.intact$`Sub class`)
chain_EASE_result <- chain.EASE(down_diseased_vs_control.chain, universe.chain)
allchains_EASE_result <- allchains.EASE(down_diseased_vs_control.allchains, universe.allchains)
# Run the category specific total number of chain carbon enrichment
total_carbon_cat_result<-total.carbon.cat(down_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific total number of chain carbon enrichment
total_carbon_main_result<-total.carbon.main(down_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific total number of chain carbon enrichment
total_carbon_sub_result<-total.carbon.sub(down_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific number of chain DB enrichment
total_DB_cat_result<-total.DB.cat(down_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_main_result<-total.DB.main(down_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_sub_result<-total.DB.sub(down_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific allchains enrichment
allchains_cat_result<-allchains.cat(down_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific allchains enrichment
allchains_main_result<-allchains.main(down_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific allchains enrichment
allchains_sub_result<-allchains.sub(down_diseased_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# subclass enrichment by mainclass (EASE)
subclass_mainclass_result<- subclass.mainclass(down_diseased_vs_control.intact,universe.intact,test= "EASE", enrich=T, p = 0.05)
#reformat the tables to add the type of test
intact_EASE_cat_result<- cbind(Type=(rep("Intact")),intact_EASE_cat_result)
intact_EASE_main_result<- cbind(Type=(rep("Main Class")),intact_EASE_main_result)
intact_EASE_sub_result<- cbind(Type=(rep("Sub Class")),intact_EASE_sub_result)
chain_EASE_result<- cbind(Type=(rep("Chain characteristics")),chain_EASE_result)
allchains_EASE_result<- cbind(Type=(rep("Specific chain")),allchains_EASE_result)
total_carbon_cat_result<- cbind(Type=(rep("TotalCarbon by Cat")),total_carbon_cat_result)
total_carbon_main_result<- cbind(Type=(rep("TotalCarbon by Main")),total_carbon_main_result)
total_carbon_sub_result<- cbind(Type=(rep("TotalCarbon by Sub")),total_carbon_sub_result)
total_DB_cat_result<- cbind(Type=(rep("total DB by Cat")),total_DB_cat_result)
total_DB_main_result<- cbind(Type=(rep("total DB by Main")),total_DB_main_result)
total_DB_sub_result<- cbind(Type=(rep("total DB by Sub")),total_DB_sub_result)
allchains_cat_result<- cbind(Type=(rep("Specific Chain by Cat")),allchains_cat_result)
allchains_main_result<- cbind(Type=(rep("Specific Chain by Main")),allchains_main_result)
allchains_sub_result<- cbind(Type=(rep("Specific Chain by Sub")),allchains_sub_result)
subclass_mainclass_result<-cbind(Type=(rep("Subclass by Mainclass")),subclass_mainclass_result)
# place all the tables in a globaloutput table
globaloutput_down_diseased_vs_control<-rbind(intact_EASE_cat_result,intact_EASE_main_result,intact_EASE_sub_result,chain_EASE_result,total_carbon_cat_result,total_carbon_main_result,total_carbon_sub_result,total_DB_cat_result,total_DB_main_result,total_DB_sub_result,allchains_cat_result,allchains_main_result,allchains_sub_result,subclass_mainclass_result, allchains_EASE_result)
#filter this output with a pvalue cutoff
filteredGlobalOutput_down_diseased_vs_control<-globaloutput_down_diseased_vs_control[globaloutput_down_diseased_vs_control$`p-value`<0.05&globaloutput_down_diseased_vs_control$Fold.change>1,]
#display the global table after filtering it
datatable(filteredGlobalOutput_down_diseased_vs_control)
#Prepare the table for combination with the two other clusters
filteredGlobalOutput_down_diseased_vs_control<-cbind(cluster="down_diseased_vs_control",filteredGlobalOutput_down_diseased_vs_control)
#category stack barplot
grid.arrange(intact.cat.stack(universe.intact)+ggtitle("universe"),intact.cat.stack(down_diseased_vs_control.intact)+ggtitle("down_diseased_vs_control"),ncol=2)
#Main class stack barplot
grid.arrange(intact.main.stack(universe.intact)+ggtitle("universe"),intact.main.stack(down_diseased_vs_control.intact)+ggtitle("down_diseased_vs_control"),ncol=2)
#Sub class stack barplot
grid.arrange(intact.sub.stack(universe.intact)+ggtitle("universe"),intact.sub.stack(down_diseased_vs_control.intact)+ggtitle("down_diseased_vs_control"),ncol=2)
# Chain Length stack barplot
grid.arrange(chain.length.stack(universe.chain)+ggtitle("universe"),chain.length.stack(down_diseased_vs_control.chain)+ggtitle("down_diseased_vs_control"),ncol=2)
#Unsaturation stack barplot
grid.arrange(chain.unsat.stack(universe.chain)+ggtitle("universe"),chain.unsat.stack(down_diseased_vs_control.chain)+ggtitle("down_diseased_vs_control"),ncol=2)
#Unique chains barplot (down_diseased_vs_control and uninverse)
allchains.barplot(down_diseased_vs_control.allchains,universe.allchains)+ggtitle("All chains")
#make Network
lipid_visnetwork_plot(down_diseased_vs_control,filteredGlobalOutput_down_diseased_vs_control,p = 0.05)
lipid.miner(up_recovered_vs_control, name="up_recovered_vs_control", TGcollapse.rm = TRUE)
lipid.miner(universe, name="universe", TGcollapse.rm = TRUE)
# run the EASE test (and create results objects)
intact_EASE_cat_result <- intact.EASE(up_recovered_vs_control.intact$Category, universe.intact$Category)
intact_EASE_main_result <- intact.EASE(up_recovered_vs_control.intact$`Main class`, universe.intact$`Main class`)
intact_EASE_sub_result <- intact.EASE(up_recovered_vs_control.intact$`Sub class`, universe.intact$`Sub class`)
chain_EASE_result <- chain.EASE(up_recovered_vs_control.chain, universe.chain)
allchains_EASE_result <- allchains.EASE(up_recovered_vs_control.allchains, universe.allchains)
# Run the category specific total number of chain carbon enrichment
total_carbon_cat_result<-total.carbon.cat(up_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific total number of chain carbon enrichment
total_carbon_main_result<-total.carbon.main(up_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific total number of chain carbon enrichment
total_carbon_sub_result<-total.carbon.sub(up_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific number of chain DB enrichment
total_DB_cat_result<-total.DB.cat(up_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_main_result<-total.DB.main(up_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_sub_result<-total.DB.sub(up_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific allchains enrichment
allchains_cat_result<-allchains.cat(up_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific allchains enrichment
allchains_main_result<-allchains.main(up_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific allchains enrichment
allchains_sub_result<-allchains.sub(up_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# subclass enrichment by mainclass (EASE)
subclass_mainclass_result<- subclass.mainclass(up_recovered_vs_control.intact,universe.intact,test= "EASE", enrich=T, p = 0.05)
#reformat the tables to add the type of test
intact_EASE_cat_result<- cbind(Type=(rep("Intact")),intact_EASE_cat_result)
intact_EASE_main_result<- cbind(Type=(rep("Main Class")),intact_EASE_main_result)
intact_EASE_sub_result<- cbind(Type=(rep("Sub Class")),intact_EASE_sub_result)
chain_EASE_result<- cbind(Type=(rep("Chain characteristics")),chain_EASE_result)
allchains_EASE_result<- cbind(Type=(rep("Specific chain")),allchains_EASE_result)
total_carbon_cat_result<- cbind(Type=(rep("TotalCarbon by Cat")),total_carbon_cat_result)
total_carbon_main_result<- cbind(Type=(rep("TotalCarbon by Main")),total_carbon_main_result)
total_carbon_sub_result<- cbind(Type=(rep("TotalCarbon by Sub")),total_carbon_sub_result)
total_DB_cat_result<- cbind(Type=(rep("total DB by Cat")),total_DB_cat_result)
total_DB_main_result<- cbind(Type=(rep("total DB by Main")),total_DB_main_result)
total_DB_sub_result<- cbind(Type=(rep("total DB by Sub")),total_DB_sub_result)
allchains_cat_result<- cbind(Type=(rep("Specific Chain by Cat")),allchains_cat_result)
allchains_main_result<- cbind(Type=(rep("Specific Chain by Main")),allchains_main_result)
allchains_sub_result<- cbind(Type=(rep("Specific Chain by Sub")),allchains_sub_result)
subclass_mainclass_result<-cbind(Type=(rep("Subclass by Mainclass")),subclass_mainclass_result)
# place all the tables in a globaloutput table
globaloutput_up_recovered_vs_control<-rbind(intact_EASE_cat_result,intact_EASE_main_result,intact_EASE_sub_result,chain_EASE_result,total_carbon_cat_result,total_carbon_main_result,total_carbon_sub_result,total_DB_cat_result,total_DB_main_result,total_DB_sub_result,allchains_cat_result,allchains_main_result,allchains_sub_result,subclass_mainclass_result, allchains_EASE_result)
#filter this output with a pvalue cutoff
filteredGlobalOutput_up_recovered_vs_control<-globaloutput_up_recovered_vs_control[globaloutput_up_recovered_vs_control$`p-value`<0.05&globaloutput_up_recovered_vs_control$Fold.change>1,]
#display the global table after filtering it
datatable(filteredGlobalOutput_up_recovered_vs_control)
#Prepare the table for combination with the two other clusters
filteredGlobalOutput_up_recovered_vs_control<-cbind(cluster="up_recovered_vs_control",filteredGlobalOutput_up_recovered_vs_control)
#category stack barplot
grid.arrange(intact.cat.stack(universe.intact)+ggtitle("universe"),intact.cat.stack(up_recovered_vs_control.intact)+ggtitle("up_recovered_vs_control"),ncol=2)
#Main class stack barplot
grid.arrange(intact.main.stack(universe.intact)+ggtitle("universe"),intact.main.stack(up_recovered_vs_control.intact)+ggtitle("up_recovered_vs_control"),ncol=2)
#Sub class stack barplot
grid.arrange(intact.sub.stack(universe.intact)+ggtitle("universe"),intact.sub.stack(up_recovered_vs_control.intact)+ggtitle("up_recovered_vs_control"),ncol=2)
# Chain Length stack barplot
grid.arrange(chain.length.stack(universe.chain)+ggtitle("universe"),chain.length.stack(up_recovered_vs_control.chain)+ggtitle("up_recovered_vs_control"),ncol=2)
#Unsaturation stack barplot
grid.arrange(chain.unsat.stack(universe.chain)+ggtitle("universe"),chain.unsat.stack(up_recovered_vs_control.chain)+ggtitle("up_recovered_vs_control"),ncol=2)
#Unique chains barplot (up_recovered_vs_control and uninverse)
allchains.barplot(up_recovered_vs_control.allchains,universe.allchains)+ggtitle("All chains")
#make Network
lipid_visnetwork_plot(up_recovered_vs_control,filteredGlobalOutput_up_recovered_vs_control,p = 0.05)
lipid.miner(down_recovered_vs_control, name="down_recovered_vs_control", TGcollapse.rm = TRUE)
lipid.miner(universe, name="universe", TGcollapse.rm = TRUE)
# run the EASE test (and create results objects)
intact_EASE_cat_result <- intact.EASE(down_recovered_vs_control.intact$Category, universe.intact$Category)
intact_EASE_main_result <- intact.EASE(down_recovered_vs_control.intact$`Main class`, universe.intact$`Main class`)
intact_EASE_sub_result <- intact.EASE(down_recovered_vs_control.intact$`Sub class`, universe.intact$`Sub class`)
chain_EASE_result <- chain.EASE(down_recovered_vs_control.chain, universe.chain)
allchains_EASE_result <- allchains.EASE(down_recovered_vs_control.allchains, universe.allchains)
# Run the category specific total number of chain carbon enrichment
total_carbon_cat_result<-total.carbon.cat(down_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific total number of chain carbon enrichment
total_carbon_main_result<-total.carbon.main(down_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific total number of chain carbon enrichment
total_carbon_sub_result<-total.carbon.sub(down_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific number of chain DB enrichment
total_DB_cat_result<-total.DB.cat(down_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_main_result<-total.DB.main(down_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_sub_result<-total.DB.sub(down_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific allchains enrichment
allchains_cat_result<-allchains.cat(down_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific allchains enrichment
allchains_main_result<-allchains.main(down_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific allchains enrichment
allchains_sub_result<-allchains.sub(down_recovered_vs_control.intact,universe.intact, enrich=FALSE,test = "EASE")
# subclass enrichment by mainclass (EASE)
subclass_mainclass_result<- subclass.mainclass(down_recovered_vs_control.intact,universe.intact,test= "EASE", enrich=T, p = 0.05)
#reformat the tables to add the type of test
intact_EASE_cat_result<- cbind(Type=(rep("Intact")),intact_EASE_cat_result)
intact_EASE_main_result<- cbind(Type=(rep("Main Class")),intact_EASE_main_result)
intact_EASE_sub_result<- cbind(Type=(rep("Sub Class")),intact_EASE_sub_result)
chain_EASE_result<- cbind(Type=(rep("Chain characteristics")),chain_EASE_result)
allchains_EASE_result<- cbind(Type=(rep("Specific chain")),allchains_EASE_result)
total_carbon_cat_result<- cbind(Type=(rep("TotalCarbon by Cat")),total_carbon_cat_result)
total_carbon_main_result<- cbind(Type=(rep("TotalCarbon by Main")),total_carbon_main_result)
total_carbon_sub_result<- cbind(Type=(rep("TotalCarbon by Sub")),total_carbon_sub_result)
total_DB_cat_result<- cbind(Type=(rep("total DB by Cat")),total_DB_cat_result)
total_DB_main_result<- cbind(Type=(rep("total DB by Main")),total_DB_main_result)
total_DB_sub_result<- cbind(Type=(rep("total DB by Sub")),total_DB_sub_result)
allchains_cat_result<- cbind(Type=(rep("Specific Chain by Cat")),allchains_cat_result)
allchains_main_result<- cbind(Type=(rep("Specific Chain by Main")),allchains_main_result)
allchains_sub_result<- cbind(Type=(rep("Specific Chain by Sub")),allchains_sub_result)
subclass_mainclass_result<-cbind(Type=(rep("Subclass by Mainclass")),subclass_mainclass_result)
# place all the tables in a globaloutput table
globaloutput_down_recovered_vs_control<-rbind(intact_EASE_cat_result,intact_EASE_main_result,intact_EASE_sub_result,chain_EASE_result,total_carbon_cat_result,total_carbon_main_result,total_carbon_sub_result,total_DB_cat_result,total_DB_main_result,total_DB_sub_result,allchains_cat_result,allchains_main_result,allchains_sub_result,subclass_mainclass_result, allchains_EASE_result)
#filter this output with a pvalue cutoff
filteredGlobalOutput_down_recovered_vs_control<-globaloutput_down_recovered_vs_control[globaloutput_down_recovered_vs_control$`p-value`<0.05&globaloutput_down_recovered_vs_control$Fold.change>1,]
#display the global table after filtering it
datatable(filteredGlobalOutput_down_recovered_vs_control)
#Prepare the table for combination with the two other clusters
filteredGlobalOutput_down_recovered_vs_control<-cbind(cluster="down_recovered_vs_control",filteredGlobalOutput_down_recovered_vs_control)
#category stack barplot
grid.arrange(intact.cat.stack(universe.intact)+ggtitle("universe"),intact.cat.stack(down_recovered_vs_control.intact)+ggtitle("down_recovered_vs_control"),ncol=2)
#Main class stack barplot
grid.arrange(intact.main.stack(universe.intact)+ggtitle("universe"),intact.main.stack(down_recovered_vs_control.intact)+ggtitle("down_recovered_vs_control"),ncol=2)
#Sub class stack barplot
grid.arrange(intact.sub.stack(universe.intact)+ggtitle("universe"),intact.sub.stack(down_recovered_vs_control.intact)+ggtitle("down_recovered_vs_control"),ncol=2)
# Chain Length stack barplot
grid.arrange(chain.length.stack(universe.chain)+ggtitle("universe"),chain.length.stack(down_recovered_vs_control.chain)+ggtitle("down_recovered_vs_control"),ncol=2)
#Unsaturation stack barplot
grid.arrange(chain.unsat.stack(universe.chain)+ggtitle("universe"),chain.unsat.stack(down_recovered_vs_control.chain)+ggtitle("down_recovered_vs_control"),ncol=2)
#Unique chains barplot (down_recovered_vs_control and uninverse)
allchains.barplot(down_recovered_vs_control.allchains,universe.allchains)+ggtitle("All chains")
#make Network
lipid_visnetwork_plot(down_recovered_vs_control,filteredGlobalOutput_down_recovered_vs_control,p = 0.05)
lipid.miner(up_recovered_vs_diseased, name="up_recovered_vs_diseased", TGcollapse.rm = TRUE)
lipid.miner(universe, name="universe", TGcollapse.rm = TRUE)
# run the EASE test (and create results objects)
intact_EASE_cat_result <- intact.EASE(up_recovered_vs_diseased.intact$Category, universe.intact$Category)
intact_EASE_main_result <- intact.EASE(up_recovered_vs_diseased.intact$`Main class`, universe.intact$`Main class`)
intact_EASE_sub_result <- intact.EASE(up_recovered_vs_diseased.intact$`Sub class`, universe.intact$`Sub class`)
chain_EASE_result <- chain.EASE(up_recovered_vs_diseased.chain, universe.chain)
allchains_EASE_result <- allchains.EASE(up_recovered_vs_diseased.allchains, universe.allchains)
# Run the category specific total number of chain carbon enrichment
total_carbon_cat_result<-total.carbon.cat(up_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific total number of chain carbon enrichment
total_carbon_main_result<-total.carbon.main(up_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific total number of chain carbon enrichment
total_carbon_sub_result<-total.carbon.sub(up_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific number of chain DB enrichment
total_DB_cat_result<-total.DB.cat(up_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_main_result<-total.DB.main(up_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_sub_result<-total.DB.sub(up_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific allchains enrichment
allchains_cat_result<-allchains.cat(up_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific allchains enrichment
allchains_main_result<-allchains.main(up_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific allchains enrichment
allchains_sub_result<-allchains.sub(up_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# subclass enrichment by mainclass (EASE)
subclass_mainclass_result<- subclass.mainclass(up_recovered_vs_diseased.intact,universe.intact,test= "EASE", enrich=T, p = 0.05)
#reformat the tables to add the type of test
intact_EASE_cat_result<- cbind(Type=(rep("Intact")),intact_EASE_cat_result)
intact_EASE_main_result<- cbind(Type=(rep("Main Class")),intact_EASE_main_result)
intact_EASE_sub_result<- cbind(Type=(rep("Sub Class")),intact_EASE_sub_result)
chain_EASE_result<- cbind(Type=(rep("Chain characteristics")),chain_EASE_result)
allchains_EASE_result<- cbind(Type=(rep("Specific chain")),allchains_EASE_result)
total_carbon_cat_result<- cbind(Type=(rep("TotalCarbon by Cat")),total_carbon_cat_result)
total_carbon_main_result<- cbind(Type=(rep("TotalCarbon by Main")),total_carbon_main_result)
total_carbon_sub_result<- cbind(Type=(rep("TotalCarbon by Sub")),total_carbon_sub_result)
total_DB_cat_result<- cbind(Type=(rep("total DB by Cat")),total_DB_cat_result)
total_DB_main_result<- cbind(Type=(rep("total DB by Main")),total_DB_main_result)
total_DB_sub_result<- cbind(Type=(rep("total DB by Sub")),total_DB_sub_result)
allchains_cat_result<- cbind(Type=(rep("Specific Chain by Cat")),allchains_cat_result)
allchains_main_result<- cbind(Type=(rep("Specific Chain by Main")),allchains_main_result)
allchains_sub_result<- cbind(Type=(rep("Specific Chain by Sub")),allchains_sub_result)
subclass_mainclass_result<-cbind(Type=(rep("Subclass by Mainclass")),subclass_mainclass_result)
# place all the tables in a globaloutput table
globaloutput_up_recovered_vs_diseased<-rbind(intact_EASE_cat_result,intact_EASE_main_result,intact_EASE_sub_result,chain_EASE_result,total_carbon_cat_result,total_carbon_main_result,total_carbon_sub_result,total_DB_cat_result,total_DB_main_result,total_DB_sub_result,allchains_cat_result,allchains_main_result,allchains_sub_result,subclass_mainclass_result, allchains_EASE_result)
#filter this output with a pvalue cutoff
filteredGlobalOutput_up_recovered_vs_diseased<-globaloutput_up_recovered_vs_diseased[globaloutput_up_recovered_vs_diseased$`p-value`<0.05&globaloutput_up_recovered_vs_diseased$Fold.change>1,]
#display the global table after filtering it
datatable(filteredGlobalOutput_up_recovered_vs_diseased)
#Prepare the table for combination with the two other clusters
filteredGlobalOutput_up_recovered_vs_diseased<-cbind(cluster="up_recovered_vs_diseased",filteredGlobalOutput_up_recovered_vs_diseased)
#category stack barplot
grid.arrange(intact.cat.stack(universe.intact)+ggtitle("universe"),intact.cat.stack(up_recovered_vs_diseased.intact)+ggtitle("up_recovered_vs_diseased"),ncol=2)
#Main class stack barplot
grid.arrange(intact.main.stack(universe.intact)+ggtitle("universe"),intact.main.stack(up_recovered_vs_diseased.intact)+ggtitle("up_recovered_vs_diseased"),ncol=2)
#Sub class stack barplot
grid.arrange(intact.sub.stack(universe.intact)+ggtitle("universe"),intact.sub.stack(up_recovered_vs_diseased.intact)+ggtitle("up_recovered_vs_diseased"),ncol=2)
# Chain Length stack barplot
grid.arrange(chain.length.stack(universe.chain)+ggtitle("universe"),chain.length.stack(up_recovered_vs_diseased.chain)+ggtitle("up_recovered_vs_diseased"),ncol=2)
#Unsaturation stack barplot
grid.arrange(chain.unsat.stack(universe.chain)+ggtitle("universe"),chain.unsat.stack(up_recovered_vs_diseased.chain)+ggtitle("up_recovered_vs_diseased"),ncol=2)
#Unique chains barplot (up_recovered_vs_diseased and uninverse)
allchains.barplot(up_recovered_vs_diseased.allchains,universe.allchains)+ggtitle("All chains")
#make Network
lipid_visnetwork_plot(up_recovered_vs_diseased,filteredGlobalOutput_up_recovered_vs_diseased,p = 0.05)
lipid.miner(down_recovered_vs_diseased, name="down_recovered_vs_diseased", TGcollapse.rm = TRUE)
lipid.miner(universe, name="universe", TGcollapse.rm = TRUE)
# run the EASE test (and create results objects)
intact_EASE_cat_result <- intact.EASE(down_recovered_vs_diseased.intact$Category, universe.intact$Category)
intact_EASE_main_result <- intact.EASE(down_recovered_vs_diseased.intact$`Main class`, universe.intact$`Main class`)
intact_EASE_sub_result <- intact.EASE(down_recovered_vs_diseased.intact$`Sub class`, universe.intact$`Sub class`)
chain_EASE_result <- chain.EASE(down_recovered_vs_diseased.chain, universe.chain)
allchains_EASE_result <- allchains.EASE(down_recovered_vs_diseased.allchains, universe.allchains)
# Run the category specific total number of chain carbon enrichment
total_carbon_cat_result<-total.carbon.cat(down_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific total number of chain carbon enrichment
total_carbon_main_result<-total.carbon.main(down_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific total number of chain carbon enrichment
total_carbon_sub_result<-total.carbon.sub(down_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific number of chain DB enrichment
total_DB_cat_result<-total.DB.cat(down_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_main_result<-total.DB.main(down_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific number of chain DB enrichment
total_DB_sub_result<-total.DB.sub(down_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the category specific allchains enrichment
allchains_cat_result<-allchains.cat(down_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the Main class specific allchains enrichment
allchains_main_result<-allchains.main(down_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# Run the sub class specific allchains enrichment
allchains_sub_result<-allchains.sub(down_recovered_vs_diseased.intact,universe.intact, enrich=FALSE,test = "EASE")
# subclass enrichment by mainclass (EASE)
subclass_mainclass_result<- subclass.mainclass(down_recovered_vs_diseased.intact,universe.intact,test= "EASE", enrich=T, p = 0.05)
#reformat the tables to add the type of test
intact_EASE_cat_result<- cbind(Type=(rep("Intact")),intact_EASE_cat_result)
intact_EASE_main_result<- cbind(Type=(rep("Main Class")),intact_EASE_main_result)
intact_EASE_sub_result<- cbind(Type=(rep("Sub Class")),intact_EASE_sub_result)
chain_EASE_result<- cbind(Type=(rep("Chain characteristics")),chain_EASE_result)
allchains_EASE_result<- cbind(Type=(rep("Specific chain")),allchains_EASE_result)
total_carbon_cat_result<- cbind(Type=(rep("TotalCarbon by Cat")),total_carbon_cat_result)
total_carbon_main_result<- cbind(Type=(rep("TotalCarbon by Main")),total_carbon_main_result)
total_carbon_sub_result<- cbind(Type=(rep("TotalCarbon by Sub")),total_carbon_sub_result)
total_DB_cat_result<- cbind(Type=(rep("total DB by Cat")),total_DB_cat_result)
total_DB_main_result<- cbind(Type=(rep("total DB by Main")),total_DB_main_result)
total_DB_sub_result<- cbind(Type=(rep("total DB by Sub")),total_DB_sub_result)
allchains_cat_result<- cbind(Type=(rep("Specific Chain by Cat")),allchains_cat_result)
allchains_main_result<- cbind(Type=(rep("Specific Chain by Main")),allchains_main_result)
allchains_sub_result<- cbind(Type=(rep("Specific Chain by Sub")),allchains_sub_result)
subclass_mainclass_result<-cbind(Type=(rep("Subclass by Mainclass")),subclass_mainclass_result)
# place all the tables in a globaloutput table
globaloutput_down_recovered_vs_diseased<-rbind(intact_EASE_cat_result,intact_EASE_main_result,intact_EASE_sub_result,chain_EASE_result,total_carbon_cat_result,total_carbon_main_result,total_carbon_sub_result,total_DB_cat_result,total_DB_main_result,total_DB_sub_result,allchains_cat_result,allchains_main_result,allchains_sub_result,subclass_mainclass_result, allchains_EASE_result)
#filter this output with a pvalue cutoff
filteredGlobalOutput_down_recovered_vs_diseased<-globaloutput_down_recovered_vs_diseased[globaloutput_down_recovered_vs_diseased$`p-value`<0.05&globaloutput_down_recovered_vs_diseased$Fold.change>1,]
#display the global table after filtering it
datatable(filteredGlobalOutput_down_recovered_vs_diseased)
#Prepare the table for combination with the two other clusters
filteredGlobalOutput_down_recovered_vs_diseased<-cbind(cluster="down_recovered_vs_diseased",filteredGlobalOutput_down_recovered_vs_diseased)
#category stack barplot
grid.arrange(intact.cat.stack(universe.intact)+ggtitle("universe"),intact.cat.stack(down_recovered_vs_diseased.intact)+ggtitle("down_recovered_vs_diseased"),ncol=2)
#Main class stack barplot
grid.arrange(intact.main.stack(universe.intact)+ggtitle("universe"),intact.main.stack(down_recovered_vs_diseased.intact)+ggtitle("down_recovered_vs_diseased"),ncol=2)
#Sub class stack barplot
grid.arrange(intact.sub.stack(universe.intact)+ggtitle("universe"),intact.sub.stack(down_recovered_vs_diseased.intact)+ggtitle("down_recovered_vs_diseased"),ncol=2)
# Chain Length stack barplot
grid.arrange(chain.length.stack(universe.chain)+ggtitle("universe"),chain.length.stack(down_recovered_vs_diseased.chain)+ggtitle("down_recovered_vs_diseased"),ncol=2)
#Unsaturation stack barplot
grid.arrange(chain.unsat.stack(universe.chain)+ggtitle("universe"),chain.unsat.stack(down_recovered_vs_diseased.chain)+ggtitle("down_recovered_vs_diseased"),ncol=2)
#Unique chains barplot (down_recovered_vs_diseased and uninverse)
allchains.barplot(down_recovered_vs_diseased.allchains,universe.allchains)+ggtitle("All chains")
#make Network
lipid_visnetwork_plot(down_recovered_vs_diseased,filteredGlobalOutput_down_recovered_vs_diseased,p = 0.05)
filteredGlobalOutput_ttests<-rbind(filteredGlobalOutput_up_diseased_vs_control,filteredGlobalOutput_down_diseased_vs_control,filteredGlobalOutput_up_recovered_vs_control,filteredGlobalOutput_down_recovered_vs_control,filteredGlobalOutput_up_recovered_vs_diseased,filteredGlobalOutput_down_recovered_vs_diseased)
filteredGlobalOutput_ttests<-filteredGlobalOutput_ttests[!is.na(filteredGlobalOutput_ttests$`p-value`),]
write.table(filteredGlobalOutput_ttests,file="03_output_files/LipidMiniOn_ttests_enrichments.txt",sep = "\t",row.names = F)
results<-romicsExportData(romics_lipids,statistics = T,missing_data = T)
write.csv(results, file= "./03_output_files/Data_processed_with_stats.csv")
LMPDB<-as.character(t(read.csv(file = "01_source_files/Lipid Maps proteome database.csv")))
romics_proteins_lipid_related<-featureSubset(romics_proteins_noOutliers,LMPDB)
LMPDB<-as.character(t(read.csv(file = "01_source_files/Lipid Maps proteome database.csv")))
romics_proteins_lipid_related<-featureSubset(romics_proteins_noOutliers,LMPDB)
