"0","library(""umap"")"
"0",""
"0","romics_umap<- function(romics_object, umap_config=umap.defaults, method = c(""naive"", ""umap-learn""), lock_seed=TRUE, seed = 42){"
"0","  if(missing(romics_object)){stop(""romics_object is missing"")}"
"0","  if(class(romics_object)!=""romics_object""){stop(""your romics_object was not created using the function romicsCreateObject"")}"
"0","  if(romics_object$steps[1]!=""romics_object""){stop(""romics_object is not in the appropriate format"")}"
"0","  if(missing(umap_config)){umap_config=umap.defaults}"
"0","  if(missing(method)){method=""naive""}"
"0","  if(missing(lock_seed)){lock_seed=TRUE}"
"0","  if(!is.logical(lock_seed)){stop(""lock_seed has to be either TRUE or FALSE"")}"
"0","  if(missing(seed)){seed<-42}"
"0",""
"0","  #set seed so the plot will always look the sameif lock seed was TRUE else use a random seed."
"0","  if (lock_seed==TRUE){"
"0","    set.seed(seed)}else{"
"0","      set.seed(Sys.time())}"
"0",""
"0","  #load data"
"0","  data<-t(romics_object$data)"
"0",""
"0","  #run the umap"
"0","  umap <- umap(data, umap_config, method=method)"
"0","  "
"0","  #return result"
"0","  return(umap)"
"0","  }"
"0",""
"0","romicsUmapPlot<-function(romics_object, umap_config=umap.defaults, label=TRUE, method = c(""naive"", ""umap-learn""), lock_seed=TRUE, seed = 42, color_by=c(""factor"",""variable""), factor = ""main"", variable=""variable_name"",color_palette=viridis(n=20) , scale=TRUE){"
"0","  if(missing(romics_object)){stop(""romics_object is missing"")}"
"0","  if(class(romics_object)!=""romics_object""){stop(""your romics_object was not created using the function romicsCreateObject"")}"
"0","  if(romics_object$steps[1]!=""romics_object""){stop(""romics_object is not in the appropriate format"")}"
"0","  if(missing(umap_config)){umap_config=umap.defaults}"
"0","  if(missing(method)){method=""naive""}"
"0","  if(missing(lock_seed)){lock_seed=TRUE}"
"0","  if(!is.logical(lock_seed)){stop(""lock_seed as to be either TRUE or FALSE"")}"
"0","  if(missing(seed)){seed<-42}"
"0","  if(missing(color_by)){color_by=""factor""}"
"0","  if(!color_by %in% c(""factor"",""variable"")){stop(""'color_by' has to be either 'variable' or 'factor'."")}"
"0","  if(missing(factor)){factor=""main""}"
"0","  if(!factor %in% c(""main"",romicsFactorNames(romics_object))){stop(""factor has to be a either 'main' or a factor_name of the romics_object, please use the function romicsFactorNames() to identify the usable factors."")}"
"0","  if(missing(variable)){variable=rownames(romics_object$data)[1]}"
"0","  if(!is.character(variable)&length(variable!=1)){stop(""<variable> should be a character vector of lenght 1"")}"
"0","  if(lock_seed==TRUE){"
"0","    set.seed(seed)}else{"
"0","    set.seed(Sys.time())}"
"0","  if(missing(color_palette)){color_palette =viridis::viridis(20)}"
"0","  if(missing(scale)){scale=T}"
"0","  #load data"
"0","  data<-t(romics_object$data)"
"0","  "
"0","  #run the umap"
"0","  umap <- umap(data, umap_config, method=method)"
"0",""
"0","  #coordinates object creation"
"0","  umap_coordinates<-data.frame(umap$layout)"
"0",""
"0","    if(color_by==""factor""){"
"0","    if(factor==""main""){"
"0","      labels<-romics_object$metadata[rownames(romics_object$metadata)==romics_object$main_factor,]"
"0","      colors<-romics_object$metadata[rownames(romics_object$metadata)==""colors_romics"",]"
"0","    }else{"
"0","    changed_factor<-romicsChangeFactor(romics_object,main_factor = factor)"
"0","    labels<-changed_factor$metadata[rownames(changed_factor$metadata)==factor,]"
"0","    colors<-changed_factor$metadata[rownames(changed_factor$metadata)==""colors_romics"",]"
"0","    }"
"0","  "
"0","  umap_coordinates<-merge(umap_coordinates,t(labels),by=0)"
"0","  "
"0","  rownames(umap_coordinates)<-umap_coordinates$Row.names"
"0","  umap_coordinates<-umap_coordinates[-1]"
"0","  umap_coordinates<-merge(umap_coordinates,t(colors),by=0)"
"0","  rownames(umap_coordinates)<-umap_coordinates$Row.names"
"0","  umap_coordinates<-umap_coordinates[-1]"
"0","  colnames(umap_coordinates)<-c(""umap1"", ""umap2"",""labels"",""colors"")"
"0",""
"0","  umap_plot<- ggplot(umap_coordinates, aes(x=umap1, y=umap2, color=labels)) +"
"0","    geom_point(size=4, alpha=I(.8))+"
"0","    theme_ROP()+"
"0","    ggtitle(""umap plot"")+"
"0","    scale_color_manual(values = unique(umap_coordinates$colors)) +labs(color = romics_object$main_factor)"
"0","  "
"0","  }else{"
"0","  variable<-colnames(data)[grepl(variable,colnames(data))]"
"0","  "
"0","  if(length(variable)>1){"
"0","    warning(""More than one variable contained the variable choosen:"")"
"0","    warning(variable)"
"0","    stop()"
"0","  }"
"0","  if(length(variable)==0){stop(""your variable was not present in the romics_object"")}"
"0","  variable_val<-data[,colnames(data)==variable]"
"0","  "
"0","  if(scale==T){"
"0","    scaled_variable <-as.numeric(scale(variable_val))"
"0","    names(scaled_variable)<-names(variable_val)"
"0","    variable_val<-scaled_variable"
"0","    }"
"0","  "
"0","  umap_coordinates<-cbind(umap_coordinates,variable_val)"
"0","  colnames(umap_coordinates)<-c(""umap1"", ""umap2"",""variable_val"")"
"0",""
"0","  umap_plot<- ggplot(umap_coordinates, aes(x=umap1, y=umap2, color=variable_val)) +"
"0","  geom_point(size=4, alpha=I(.8))+ theme_ROP()+ ggtitle(paste0(""umap plot colored by "",variable))+ "
"0","  scale_color_gradientn(colours = color_palette)"
"0","  }"
"0","  "
"0","  if(label==TRUE){"
"0","  umap_plot<-umap_plot+geom_text(colour=umap_coordinates$colors, size = 3,label=rownames(data))"
"0","  }"
"0","  "
"0","  plot(umap_plot)"
"0","  }"
"0",""
